{"version":3,"sources":["scripts/app-9d29303617.js"],"names":["angular","module","routerConfig","$stateProvider","$urlRouterProvider","state","url","templateUrl","data","pageTitle","controller","controllerAs","otherwise","$inject","config","dataservice","taskDueStatusClassService","logger","$stateParams","$state","activate","getTasksSummary","bcp","filterText","then","info","filterId","vm","todoList","inProgressList","completedList","this","userName","helloText","descriptionText","taskDueStatusClass","retrieveTaskDueStatusClass","sortableOptions","connectWith","reload","specialClass","getAllWorkingSets","businessControlProfileList","$log","toastr","error","message","title","success","warning","warn","service","showToasts","log","factory","exception","catcher","reason","exceptionHandlerProvider","appErrorPrefix","undefined","configure","$get","$provide","decorator","extendExceptionHandler","$delegate","exceptionHandler","cause","errorData","provider","getWorkingSetsSuccess","workingSets","getWorkingSetsNotification","notification","errorCallback","errorMsg","console","getAllWorkingSetsComplete","getFiltersSuccess","filters","getFiltersNotification","getAllFiltersComplete","getAllFilters","bcpNavClass","id","filterNavClass","filter","filterClass","$http","$location","$q","deferred","defer","tasksPromise","getAllTasks","when","tasksData","allTasks","taskInfos","forEach","currentTask","index","array","taskState","push","tasksSummaryData","resolve","promise","method","baseURL","sendResponseData","sendGetTasksError","response","reject","status","sendGetWorkingSetsError","sendGetFiltersError","task","dueStatusClass","dueStatus","value","constant","moment","authURL","oldTroutBaseURL","element","document","ready","$timeout","fix_height","heightWithoutNavbar","height","css","navbarHeight","wrapperHeigh","window","hasClass","bind","scroll","scrollTop","addClass","removeClass","width","runBlock","$rootScope","debug","run","abstract","directive","restrict","link","scope","$watch","metisMenu","menuElement","click","toggleClass","sidebar","parent","slimScroll","railOpacity","template","$scope","minimalize","hide","fadeIn","removeAttr","listener","event","toState","toParams","fromState","fromParams","text","$on","$templateCache","put"],"mappings":"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","file":"scripts/app-9d29303617.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('inspinia', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ngResource', 'ui.router', 'ui.bootstrap', 'ngRoute','oc.lazyLoad', 'ui.sortable','gridshore.c3js.chart']);\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('inspinia')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider, $urlRouterProvider) {\r\n    $stateProvider\r\n      .state('index.taskboard', {\r\n        url: \"/taskboard/:filterText?bcp\",\r\n        templateUrl: \"app/taskboard/taskboard.html\",\r\n        data: { pageTitle: 'Taskboard' },\r\n        controller: 'TaskboardController',\r\n        controllerAs: 'vm'\r\n                        \r\n      });\r\n\r\n    $urlRouterProvider.otherwise('/index/main');\r\n  }\r\n\r\n})();\r\n\n'use strict';\r\n\r\nangular.module('inspinia')\r\n    .controller('TaskboardController', function (dataservice, taskDueStatusClassService, logger, $stateParams, $state) {\r\n    \r\n    var vm = this;\r\n    \r\n    vm.userName = 'Example user';\r\n    vm.helloText = 'Taskboard';\r\n    vm.descriptionText = 'Taskboard';\r\n    vm.taskDueStatusClass = taskDueStatusClassService.retrieveTaskDueStatusClass;\r\n    \r\n    //Following function doesnot use the value service pointer.\r\n    //            function(task) {\r\n    //        switch(task.dueStatus.status)\r\n    //        {\r\n    //            case 'Overdue' :\r\n    //                return 'danger-element';\r\n    //                break;\r\n    //            case 'On Time' :\r\n    //                return 'success-element';\r\n    //                break;\r\n    //            case 'In Jeopardy' :\r\n    //                return 'warning-element';\r\n    //                break;\r\n    //        }\r\n    //    };\r\n    \r\n    vm.sortableOptions = {\r\n        connectWith: \".connectList\"\r\n    };\r\n    \r\n    activate();\r\n    \r\n    vm.reload = function () {\r\n        //alert('Hi');\r\n        //activate();\r\n        $state.reload();\r\n    }\r\n    \r\n    function activate() {\r\n        //Following comment is from the original sorce, CleanCode by John Papa\r\n        //            Using a resolver on all routes or dataservice.ready in every controller\r\n        //            var promises = [getAvengers()];\r\n        //            return dataservice.ready(promises).then(function(){\r\n        \r\n        return getTasksSummary($stateParams.bcp,$stateParams.filterText)\r\n                .then(function () {\r\n                logger.info('Activated Taskboard View');\r\n            });\r\n        }\r\n    \r\n    function getTasksSummary(bcp, filterId) {\r\n        return dataservice.getTasksSummary(bcp, filterId)\r\n            .then(function (data) {\r\n            //alert(data.todoList);\r\n            vm.todoList = data.todoList;\r\n            vm.inProgressList = data.inProgressList;\r\n            vm.completedList = data.completedList;\r\n           return vm.todoList;\r\n        });\r\n    }\r\n});\r\n\r\n//        function getAvengers() {\r\n//            return dataservice.getAvengers().then(function (data) {\r\n//                vm.todoList = data.tasks;\r\n//                vm.inProgressList = data.tasks;\r\n//                return vm.todoList;\r\n//            });\r\n//        }\r\n//    });\r\n\n'use strict';\r\n\r\nangular.module('inspinia')\r\n  .controller('MainController', function () {\r\n\r\n    var vm = this;\r\n\r\n    vm.userName = 'Example user';\r\n    vm.helloText = 'Welcome in INSPINIA Gulp SeedProject';\r\n    vm.descriptionText = 'It is an application skeleton for a typical AngularJS web app. You can use it to quickly bootstrap your angular webapp projects.';\r\n\r\n  });\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('inspinia')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider, $urlRouterProvider) {\r\n    $stateProvider\r\n      .state('login', {\r\n        url: \"/login\",\r\n        templateUrl: \"app/login/login.html\",\r\n         data: { pageTitle: 'Login', specialClass: 'login-bg' },\r\n        controller: 'LoginController',\r\n        controllerAs: 'vm'\r\n                        \r\n      });\r\n\r\n    $urlRouterProvider.otherwise('/login');\r\n  }\r\n\r\n})();\r\n\nangular.module('inspinia')\r\n    .controller('LoginController', function (dataservice, logger) {\r\n    \r\n        var vm = this;\r\n\r\n        vm.userName = 'Example user';\r\n        vm.helloText = 'Dashboard';\r\n        vm.descriptionText = 'Dashboard';\r\n    \r\n     activate();\r\n    \r\n    function activate() {\r\n        //Following comment is from the original sorce, CleanCode by John Papa\r\n        //            Using a resolver on all routes or dataservice.ready in every controller\r\n        //            var promises = [getAvengers()];\r\n        //            return dataservice.ready(promises).then(function(){\r\n        \r\n        return getAllWorkingSets()\r\n                .then(function () {\r\n                logger.info('Activated Dashboard View');\r\n            });\r\n        }\r\n    function getAllWorkingSets() {\r\n        return dataservice.getAllWorkingSets()\r\n            .then(function (data) {\r\n            //alert(data);\r\n            vm.businessControlProfileList = data;\r\n            vm.inProgressList = data.inProgressList;\r\n            vm.completedList = data.completedList;\r\n           return vm.todoList;\r\n        });\r\n    }\r\n    \r\n    });\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('inspinia')\r\n        .factory('logger', logger);\r\n\r\n    logger.$inject = ['$log', 'toastr'];\r\n\r\n    function logger($log, toastr) {\r\n        var service = {\r\n            showToasts: true,\r\n\r\n            error   : error,\r\n            info    : info,\r\n            success : success,\r\n            warning : warning,\r\n\r\n            // straight to console; bypass toastr\r\n            log     : $log.log\r\n        };\r\n\r\n        return service;\r\n        /////////////////////\r\n\r\n        function error(message, data, title) {\r\n            toastr.error(message, title);\r\n            $log.error('Error: ' + message, data);\r\n        }\r\n\r\n        function info(message, data, title) {\r\n            toastr.info(message, title);\r\n            $log.info('Info: ' + message, data);\r\n        }\r\n\r\n        function success(message, data, title) {\r\n            toastr.success(message, title);\r\n            $log.info('Success: ' + message, data);\r\n        }\r\n\r\n        function warning(message, data, title) {\r\n            toastr.warning(message, title);\r\n            $log.warn('Warning: ' + message, data);\r\n        }\r\n    }\r\n}());\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('inspinia')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider, $urlRouterProvider) {\r\n    $stateProvider     \r\n        .state('index.dashboards', {\r\n            url: \"/home\",\r\n            templateUrl:\"app/dashboards/home.html\",\r\n        data: { pageTitle: 'Dashboard' },\r\n        controller: 'DashboardController',\r\n        controllerAs: 'vm'\r\n      });\r\n\r\n\r\n    $urlRouterProvider.otherwise('/index/main');\r\n  }\r\n\r\n})();\r\n\n'use strict';\r\n\r\nangular.module('inspinia')\r\n    .controller('DashboardController', function (dataservice, logger) {\r\n    \r\n        var vm = this;\r\n\r\n        vm.userName = 'Example user';\r\n        vm.helloText = 'Dashboard';\r\n        vm.descriptionText = 'Dashboard';\r\n    \r\n     activate();\r\n    \r\n    function activate() {\r\n        //Following comment is from the original sorce, CleanCode by John Papa\r\n        //            Using a resolver on all routes or dataservice.ready in every controller\r\n        //            var promises = [getAvengers()];\r\n        //            return dataservice.ready(promises).then(function(){\r\n        \r\n        return getAllWorkingSets()\r\n                .then(function () {\r\n                logger.info('Activated Dashboard View');\r\n            });\r\n        }\r\n    function getAllWorkingSets() {\r\n        return dataservice.getAllWorkingSets()\r\n            .then(function (data) {\r\n            //alert(data);\r\n            vm.businessControlProfileList = data;\r\n            vm.inProgressList = data.inProgressList;\r\n            vm.completedList = data.completedList;\r\n           return vm.todoList;\r\n        });\r\n    }\r\n    \r\n    });\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('inspinia')\r\n        .factory('exception', exception);\r\n\r\n    /* @ngInject */\r\n    function exception(logger) {\r\n        var service = {\r\n            catcher: catcher\r\n        };\r\n        return service;\r\n\r\n        function catcher(message) {\r\n            return function(reason) {\r\n                logger.error(message, reason);\r\n            };\r\n        }\r\n    }\r\n})();\n// Include in index.html so that app level exceptions are handled.\r\n// Exclude from testRunner.html which should run exactly what it wants to run\r\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('inspinia')\r\n        .provider('exceptionHandler', exceptionHandlerProvider)\r\n        .config(config);\r\n\r\n    /**\r\n     * Must configure the exception handling\r\n     * @return {[type]}\r\n     */\r\n    function exceptionHandlerProvider() {\r\n        /* jshint validthis:true */\r\n        this.config = {\r\n            appErrorPrefix: undefined\r\n        };\r\n\r\n        this.configure = function (appErrorPrefix) {\r\n            this.config.appErrorPrefix = appErrorPrefix;\r\n        };\r\n\r\n        this.$get = function() {\r\n            return {config: this.config};\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Configure by setting an optional string value for appErrorPrefix.\r\n     * Accessible via config.appErrorPrefix (via config value).\r\n     * @param  {[type]} $provide\r\n     * @return {[type]}\r\n     * @ngInject\r\n     */\r\n    function config($provide) {\r\n        $provide.decorator('$exceptionHandler', extendExceptionHandler);\r\n    }\r\n\r\n    /**\r\n     * Extend the $exceptionHandler service to also display a toast.\r\n     * @param  {Object} $delegate\r\n     * @param  {Object} exceptionHandler\r\n     * @param  {Object} logger\r\n     * @return {Function} the decorated $exceptionHandler service\r\n     */\r\n    function extendExceptionHandler($delegate, exceptionHandler, logger) {\r\n        return function(exception, cause) {\r\n            var appErrorPrefix = exceptionHandler.config.appErrorPrefix || '';\r\n            var errorData = {exception: exception, cause: cause};\r\n            exception.message = appErrorPrefix + exception.message;\r\n            $delegate(exception, cause);\r\n            /**\r\n             * Could add the error to a service's collection,\r\n             * add errors to $rootScope, log errors to remote web server,\r\n             * or log locally. Or throw hard. It is entirely up to you.\r\n             * throw exception;\r\n             *\r\n             * @example\r\n             *     throw { message: 'error message we added' };\r\n             */\r\n            logger.error(exception.message, errorData);\r\n        };\r\n    }\r\n})();\r\n\n'use strict';\r\n\r\nangular.module('inspinia')\r\n    .controller('NavigationController', function (dataservice, logger, $stateParams) {\r\n    \r\n        var vm = this;\r\n\r\n        vm.userName = 'Example user';\r\n        vm.helloText = 'Taskboard';\r\n        vm.descriptionText = 'Taskboard';\r\n        \r\n        dataservice.getAllWorkingSets()\r\n            .then(getWorkingSetsSuccess, null, getWorkingSetsNotification)\r\n            .catch(errorCallback)\r\n            .finally(getAllWorkingSetsComplete);\r\n\r\n        function getWorkingSetsSuccess(workingSets) {\r\n            //throw 'error in success handler';\r\n            vm.businessControlProfileList = workingSets;\r\n            //alert(vm.businessControlProfileList);\r\n        }\r\n\r\n        function getWorkingSetsNotification(notification) {\r\n            //console.log('Promise Notification: ' + notification);\r\n        }\r\n\r\n        function errorCallback(errorMsg) {\r\n            console.log('Error Message: ' + errorMsg);\r\n        }\r\n\r\n        function getAllWorkingSetsComplete() {\r\n            //console.log('getAllBooks has completed');\r\n        }\r\n\r\n//        vm.businessControlProfileList = [\r\n//            {\r\n//                id : 1,\r\n//                name : 'bcp1'\r\n//            },\r\n//            {\r\n//                id : 2,\r\n//                name : 'bcp2'\r\n//            },\r\n//            {\r\n//                id : 3,\r\n//                name : 'bcp3'\r\n//            },\r\n//            {\r\n//                id : 4,\r\n//                name : 'bcp4'\r\n//            }\r\n//        ];\r\n    dataservice.getAllFilters()\r\n            .then(getFiltersSuccess, null, getFiltersNotification)\r\n            .catch(errorCallback)\r\n            .finally(getAllFiltersComplete);\r\n\r\n        function getFiltersSuccess(filters) {\r\n            //throw 'error in success handler';\r\n            vm.filters = filters;\r\n            //alert(vm.filters);\r\n        }\r\n\r\n        function getFiltersNotification(notification) {\r\n            console.log('Promise Notification: ' + notification);\r\n        }\r\n\r\n        function errorCallback(errorMsg) {\r\n            console.log('Error Message: ' + errorMsg);\r\n        }\r\n\r\n        function getAllFiltersComplete() {\r\n            console.log('getAllFilters has completed');\r\n        }\r\n//        vm.filters = [\r\n//            {\r\n//                id : 1,\r\n//                name : 'No Filter'\r\n//            },\r\n//            {\r\n//                id : 2,\r\n//                name : 'Unassigned'\r\n//            },\r\n//            {\r\n//                id : 3,\r\n//                name : 'Overdue'\r\n//            }\r\n//        ];\r\n        vm.bcpNavClass = function (bcp) {\r\n            //alert( $stateParams.bcp);\r\n          return bcp.id ==  $stateParams.bcp ? 'active' : '';  \r\n        };\r\n        vm.filterNavClass = function (filter) {\r\n            //alert('FilterID =' + filter.id);\r\n            //alert('FilterText =' + $stateParams.filterText);\r\n            var filterClass = filter.filterId == $stateParams.filterText ? 'active' : '';\r\n            //alert(filterClass);\r\n            return filterClass\r\n        }\r\n    });\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('inspinia')\r\n        .factory('dataservice', dataservice)\r\n        .value('taskDueStatusClassService', {\r\n            retrieveTaskDueStatusClass : retrieveTaskDueStatusClass\r\n        });\r\n\r\n    /* @ngInject */\r\n    function dataservice($http, $location, $q, exception, logger,config) {\r\n        var isPrimed = false;\r\n        var primePromise;\r\n\r\n        var service = {\r\n            \r\n            getTasksSummary : getTasksSummary,\r\n            getAllTasks : getAllTasks,\r\n            getAllWorkingSets : getAllWorkingSets,\r\n            getAllFilters : getAllFilters\r\n            \r\n        };\r\n\r\n        return service;\r\n\r\n        function getTasksSummary(bcp, filterId) {\r\n            \r\n            var deferred = $q.defer();\r\n            \r\n            var tasksPromise = getAllTasks(bcp, filterId);\r\n            \r\n            $q.when(tasksPromise)\r\n            .then(function (tasksData) {\r\n                \r\n                var allTasks = tasksData.taskInfos;\r\n                var todoList = [], inProgressList = [], completedList = [];\r\n                \r\n                allTasks.forEach(function (currentTask, index, array) {\r\n                    \r\n                    if(currentTask.taskState.id === 1)\r\n                        todoList.push(currentTask);\r\n                    else if(currentTask.taskState.id === 2)\r\n                        inProgressList.push(currentTask);\r\n                    else if( currentTask.taskState.id === 3)\r\n                        completedList.push(currentTask);\r\n                });\r\n                \r\n                var tasksSummaryData = {\r\n                    todoList : todoList,\r\n                    inProgressList : inProgressList,\r\n                    completedList : completedList\r\n                    \r\n                };\r\n                \r\n                 deferred.resolve(tasksSummaryData);\r\n            });\r\n           \r\n//            alert(tasksPromise);\r\n            \r\n//            return $http({\r\n//                method: 'GET',\r\n//                url: config.baseURL + 'WorkingSets/'+ bcp + '/Tasks?filterId=' + filterId\r\n//                headers: {\r\n//                    'PS-BookLogger-Version': constants.APP_VERSION\r\n//                },\r\n//                transformResponse: transformGetBooks,\r\n//                cache: true\r\n//            })\r\n            \r\n            //TODO: uncomment the bellow http get if no header specification required.\r\n            //$http.get(config.baseURL + 'WorkingSets/'+ bcp + '/Tasks?filterId=' + filterId)\r\n            //Following .then and .catch applies to both with headers and without headers.\r\n//                .then(getAvengersComplete)\r\n//                .catch(function(message) {\r\n//                    exception.catcher('XHR Failed for getAvengers')(message);\r\n//                    $location.url('/');\r\n//                });\r\n\r\n//            function getAvengersComplete(data, status, headers, config) {\r\n//                return data.data;\r\n//            }\r\n            return deferred.promise;\r\n        }\r\n        \r\n        function getAllTasks(bcp, filterId) {\r\n\r\n            return $http({\r\n                method: 'GET',\r\n                url: config.baseURL + 'WorkingSets/'+ bcp + '/Tasks?filterId=' + filterId\r\n//                headers: {\r\n//                    'PS-BookLogger-Version': constants.APP_VERSION\r\n//                },\r\n//                transformResponse: transformGetBooks,\r\n//                cache: true\r\n            })\r\n            .then(sendResponseData)\r\n            .catch(sendGetTasksError)\r\n\r\n        }\r\n        \r\n        function sendResponseData(response) {\r\n\r\n            return response.data;\r\n\r\n        }\r\n\r\n        function sendGetTasksError(response) {\r\n\r\n            return $q.reject('Error retrieving Tasks. (HTTP status: ' + response.status + ')');\r\n\r\n        }\r\n        \r\n        function getAllWorkingSets() {\r\n            return $http({\r\n                method: 'GET',\r\n                url: config.baseURL + 'WorkingSets/'\r\n//                headers: {\r\n//                    'PS-BookLogger-Version': constants.APP_VERSION\r\n//                },\r\n//                transformResponse: transformGetBooks,\r\n//                cache: true\r\n            })\r\n            .then(sendResponseData)\r\n            .catch(sendGetWorkingSetsError)\r\n        }\r\n        \r\n        function sendGetWorkingSetsError(response) {\r\n\r\n            return $q.reject('Error retrieving WorkingSets. (HTTP status: ' + response.status + ')');\r\n\r\n        }\r\n        \r\n        function getAllFilters() {\r\n            return $http({\r\n                method: 'GET',\r\n                url: config.baseURL + 'Filters/'\r\n//                headers: {\r\n//                    'PS-BookLogger-Version': constants.APP_VERSION\r\n//                },\r\n//                transformResponse: transformGetBooks,\r\n//                cache: true\r\n            })\r\n            .then(sendResponseData)\r\n            .catch(sendGetFiltersError)\r\n            \r\n        }\r\n        \r\n        function sendGetFiltersError(response) {\r\n\r\n            return $q.reject('Error retrieving Filters. (HTTP status: ' + response.status + ')');\r\n\r\n        }\r\n\r\n    }\r\n    \r\n    function retrieveTaskDueStatusClass(task) {\r\n        var dueStatusClass = null;\r\n        switch(task.dueStatus.status)\r\n        {\r\n            case 'Overdue' :\r\n                dueStatusClass = 'danger-element';\r\n                break;\r\n            case 'On Time' :\r\n                dueStatusClass  = 'success-element';\r\n                break;\r\n            case 'In Jeopardy' :\r\n                dueStatusClass = 'warning-element';\r\n                break;\r\n        }\r\n        return dueStatusClass;\r\n    }\r\n})();\r\n\n/* global toastr:false, moment:false */\r\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('inspinia')\r\n        .constant('toastr', toastr)\r\n        .constant('moment', moment)\r\n        .constant('config', {\r\n        baseURL : 'http://localhost:3706/api/',\r\n        authURL : 'http://ec2-35-164-78-65.us-west-2.compute.amazonaws.com/MagpieIdentity/',\r\n        //            baseURL : 'http://localhost:3706/api/',\r\n        //            authURL : 'http://ec2-54-148-177-100.us-west-2.compute.amazonaws.com/MagpieIdentity/',\r\n        oldTroutBaseURL : 'http://localhost:9092/Landing/index?n='\r\n    });\r\n})();\r\n\n\n/**\r\n * INSPINIA - Responsive Admin Theme\r\n * 2.7\r\n *\r\n * Custom scripts\r\n */\r\n\r\nangular.element(document).ready(function ($timeout) {\r\n\r\n\r\n  // Full height of sidebar\r\n  function fix_height() {\r\n    var heightWithoutNavbar = angular.element(\"body > #wrapper\").height() - 61;\r\n    angular.element(\".sidebar-panel\").css(\"min-height\", heightWithoutNavbar + \"px\");\r\n\r\n    var navbarHeight = angular.element('nav.navbar-default').height();\r\n    var wrapperHeigh = angular.element('#page-wrapper').height();\r\n\r\n    if(navbarHeight > wrapperHeigh){\r\n      angular.element('#page-wrapper').css(\"min-height\", navbarHeight + \"px\");\r\n    }\r\n\r\n    if(navbarHeight < wrapperHeigh){\r\n      angular.element('#page-wrapper').css(\"min-height\", angular.element(window).height()  + \"px\");\r\n    }\r\n\r\n    if (angular.element('body').hasClass('fixed-nav')) {\r\n      if (navbarHeight > wrapperHeigh) {\r\n        angular.element('#page-wrapper').css(\"min-height\", navbarHeight  + \"px\");\r\n      } else {\r\n        angular.element('#page-wrapper').css(\"min-height\", angular.element(window).height() - 60 + \"px\");\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  angular.element(window).bind(\"load resize scroll\", function() {\r\n    if(!angular.element(\"body\").hasClass('body-small')) {\r\n      fix_height();\r\n    }\r\n  });\r\n\r\n  // Move right sidebar top after scroll\r\n  angular.element(window).scroll(function(){\r\n    if (angular.element(window).scrollTop() > 0 && !angular.element('body').hasClass('fixed-nav') ) {\r\n      angular.element('#right-sidebar').addClass('sidebar-top');\r\n    } else {\r\n      angular.element('#right-sidebar').removeClass('sidebar-top');\r\n    }\r\n  });\r\n\r\n  $timeout(function(){\r\n    fix_height();\r\n  });\r\n\r\n  // Minimalize menu when screen is less than 768px\r\n  angular.element(window).bind(\"load resize\", function() {\r\n    if (angular.element(document).width() < 769) {\r\n      angular.element('body').addClass('body-small')\r\n    } else {\r\n      angular.element('body').removeClass('body-small')\r\n    }\r\n  })\r\n\r\n});\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('inspinia')\r\n    .run(runBlock);\r\n\r\n  /** @ngInject */\r\n  function runBlock($log,$rootScope, $state) {\r\n      $rootScope.$state = $state;\r\n    $log.debug('runBlock end');\r\n  }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('inspinia')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider, $urlRouterProvider) {\r\n    $stateProvider\r\n\r\n      .state('index', {\r\n        abstract: true,\r\n        url: \"/index\",\r\n        templateUrl: \"app/components/common/content.html\"\r\n      })\r\n      .state('index.main', {\r\n        url: \"/main\",\r\n        templateUrl: \"app/main/main.html\",\r\n        data: { pageTitle: 'Example view' }\r\n      })\r\n      .state('index.minor', {\r\n        url: \"/minor\",\r\n        templateUrl: \"app/minor/minor.html\",\r\n        data: { pageTitle: 'Example view' }\r\n      });\r\n\r\n    $urlRouterProvider.otherwise('/login');\r\n  }\r\n\r\n})();\r\n\n'use strict';\r\n\r\n//Directive used to set metisMenu and minimalize button\r\nangular.module('inspinia')\r\n    .directive('sideNavigation', function ($timeout) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope, element) {\r\n                // Call metsi to build when user signup\r\n                scope.$watch('authentication.user', function() {\r\n                    $timeout(function() {\r\n                        element.metisMenu();\r\n                    });\r\n                });\r\n\r\n                // Colapse menu in mobile mode after click on element\r\n                var menuElement = angular.element('#side-menu a:not([href$=\"\\\\#\"])');\r\n                menuElement.click(function(){\r\n                  if (angular.element(window).width() < 769) {\r\n                    angular.element(\"body\").toggleClass(\"mini-navbar\");\r\n                  }\r\n                });\r\n\r\n                // Enable initial fixed sidebar\r\n                if (angular.element(\"body\").hasClass('fixed-sidebar')) {\r\n                  var sidebar = element.parent();\r\n                  sidebar.slimScroll({\r\n                    height: '100%',\r\n                    railOpacity: 0.9\r\n                  });\r\n                }\r\n\r\n            }\r\n        };\r\n    })\r\n    .directive('minimalizaSidebar', function ($timeout) {\r\n        return {\r\n            restrict: 'A',\r\n            template: '<a class=\"navbar-minimalize minimalize-styl-2 btn btn-primary \" href=\"\" ng-click=\"minimalize()\"><i class=\"fa fa-bars\"></i></a>',\r\n            controller: function ($scope) {\r\n                $scope.minimalize = function () {\r\n                    angular.element('body').toggleClass('mini-navbar');\r\n                    if (!angular.element('body').hasClass('mini-navbar') || angular.element('body').hasClass('body-small')) {\r\n                        // Hide menu in order to smoothly turn on when maximize menu\r\n                        angular.element('#side-menu').hide();\r\n                        // For smoothly turn on menu\r\n                        $timeout(function () {\r\n                            angular.element('#side-menu').fadeIn(400);\r\n                        }, 200);\r\n                    } else {\r\n                        // Remove all inline style from jquery fadeIn function to reset menu state\r\n                        angular.element('#side-menu').removeAttr('style');\r\n                    }\r\n                };\r\n            }\r\n        };\r\n    })\r\n    .directive('pageTitle', function($rootScope, $timeout) {\r\n    return {\r\n        link: function(scope, element) {\r\n            var listener = function(event, toState, toParams, fromState, fromParams) {\r\n                // Default title - load on Dashboard 1\r\n                var title = 'Altius';\r\n                // Create your own title pattern\r\n                if (toState.data && toState.data.pageTitle) title = 'Altius | ' + toState.data.pageTitle;\r\n                $timeout(function() {\r\n                    element.text(title);\r\n                });\r\n            };\r\n            $rootScope.$on('$stateChangeStart', listener);\r\n        }\r\n    }\r\n});\r\n\r\n\r\n\n\n\n\n\n\nangular.module(\"inspinia\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/dashboards/home.html\",\"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\"><div class=\\\"col-lg-12\\\"><h2>Dashboard</h2><ol class=\\\"breadcrumb\\\"><li>Home</li><li>Dashboards</li><li class=\\\"active\\\"><strong>Dashboard</strong></li></ol></div></div><div class=\\\"wrapper wrapper-content animated fadeInRight\\\"><div class=\\\"row\\\" style=\\\"margin-top:20px; margin-left:5px;\\\" ng-repeat=\\\"item in vm.businessControlProfileList\\\"><div class=\\\"ibox float-e-margins col-lg-8\\\"><div class=\\\"ibox-title\\\"><span class=\\\"label label-primary pull-right\\\" ng-click=\\\"complianceScore(item)\\\"></span><h5>{{item.name}}</h5></div><div class=\\\"ibox-content\\\"><div class=\\\"row\\\"><div class=\\\"col-lg-6\\\" ng-click=\\\"showClick(item)\\\"><c3chart bindto-id=\\\"gauge-plot{{item.id}}-chart\\\"><chart-column column-id=\\\"{{item.name}}\\\" column-color=\\\"{{item.color}}\\\" column-values=\\\"{{item.workingSetCompliance}}\\\" column-type=\\\"gauge\\\"><chart-gauge min=\\\"0\\\" max=\\\"100\\\" units=\\\"Score\\\"><chart-events on-click-data=\\\"showClick(item)\\\"></chart-events></chart-gauge></chart-column></c3chart></div><div class=\\\"col-lg-6\\\"><div class=\\\"ibox float-e-margins\\\"><div class=\\\"ibox-title\\\"><span class=\\\"label label-primary pull-right hidden\\\" ng-click=\\\"complianceScore(item)\\\">?</span><h5>Control Catalogues</h5><span class=\\\"pull-right\\\"><h5>Compliance Percentage</h5></span></div><div class=\\\"ibox-content\\\"><div><ul class=\\\"list-group clear-list m-t\\\" ng-repeat=\\\"cs in item.workingSetTemplate.controlSets | limitTo:4\\\" ng-init=\\\"outerIndex = $index\\\"><li class=\\\"list-group-item\\\"><span class=\\\"label label-success hidden\\\">{{outerIndex + 1}}</span> <span class=\\\"pull-right\\\" ng-class=\\\"controlSetComplianceClass(cs)\\\">{{cs.controlSetCompliance}} %</span><span class=\\\"label label-success\\\"></span>{{cs.title }}</li></ul><ul class=\\\"list-group clear-list m-t\\\"><li class=\\\"list-group-item\\\"><span class=\\\"label label-primary pull-right\\\"></span></li></ul></div></div></div><a ui-sref=\\\"dashboards.dashboardSingleWorkingSet({obj: item})\\\"><span class=\\\"label label-primary pull-right\\\">More....</span></a></div><div class=\\\"col-lg-3 hidden\\\"><div class=\\\"ibox float-e-margins\\\"><div class=\\\"ibox-title\\\"><span class=\\\"label label-primary pull-right\\\" ng-click=\\\"complianceScore(item)\\\"></span><h5>Users</h5></div><div class=\\\"ibox-content\\\"><ul class=\\\"list-group clear-list m-t\\\" ng-repeat=\\\"user in item.users | limitTo:4\\\"><li class=\\\"list-group-item clear-list\\\"><span class=\\\"label label-success\\\"></span>{{user.userName}}</li></ul><ul class=\\\"list-group clear-list m-t\\\"><li class=\\\"list-group-item\\\"><span class=\\\"label label-primary pull-right\\\"></span></li></ul></div></div></div></div></div></div></div></div>\");\n$templateCache.put(\"app/login/login.html\",\"<div class=\\\"middle-box text-center loginscreen animated fadeInDown\\\"><div><form class=\\\"m-t\\\" role=\\\"form\\\" id=\\\"login-form\\\" ng-submit=\\\"login();\\\"><div class=\\\"row\\\" ng-repeat=\\\"error in errors\\\"><div class=\\\"alert alert-danger\\\">{{error}}</div></div><div class=\\\"form-group\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" required=\\\"\\\" ng-model=\\\"username\\\"></div><div class=\\\"form-group\\\"><input type=\\\"password\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required=\\\"\\\" ng-model=\\\"password\\\"></div><button id=\\\"login-form-submit-button\\\" type=\\\"submit\\\" class=\\\"btn btn-primary block full-width m-b\\\">Login</button></form></div></div>\");\n$templateCache.put(\"app/main/main.html\",\"<div class=\\\"wrapper wrapper-content animated fadeInRight\\\"><div class=\\\"row\\\"><div class=\\\"col-lg-12\\\"><div class=\\\"text-center m-t-lg\\\"><h1>{{main.helloText}}</h1><small>{{main.descriptionText}} <i class=\\\"glyphicon glyphicon-pencil\\\"></i></small></div></div></div></div>\");\n$templateCache.put(\"app/minor/minor.html\",\"<div class=\\\"wrapper wrapper-content animated fadeInRight\\\"><div class=\\\"row\\\"><div class=\\\"col-lg-12\\\"><div class=\\\"text-center m-t-lg\\\"><h1>Simple example of second view</h1><small>Configure in app.js as index.minor state.</small></div></div></div></div>\");\n$templateCache.put(\"app/taskboard/taskboard.html\",\"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\"><div class=\\\"col-lg-12\\\"><h2>Task Board</h2><ol class=\\\"breadcrumb\\\"><li>Home</li><li>{{vm.descriptionText}}</li><li class=\\\"active\\\"><strong>{{vm.descriptionText}}</strong></li></ol></div></div><div class=\\\"wrapper wrapper-content animated fadeInRight\\\"><div class=\\\"row\\\"><div class=\\\"col-lg-4\\\"><div class=\\\"ibox\\\"><div class=\\\"ibox-content\\\"><h3>New</h3><button ng-click=\\\"vm.reload()\\\" class=\\\"fa fa-refresh\\\">Reload</button><p class=\\\"small\\\"><i class=\\\"fa fa-hand-o-up\\\"></i> Drag task between list</p><div class=\\\"input-group\\\"><input type=\\\"text\\\" placeholder=\\\"Add new task.\\\" class=\\\"input input-sm form-control\\\" ng-model=\\\"taskTitle\\\"> <span class=\\\"input-group-btn\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-white\\\" ng-click=\\\"openTaskDetailsDialog(null)\\\"><i class=\\\"fa fa-plus\\\"></i> Add task</button></span></div><ul ui-sortable=\\\"vm.sortableOptions\\\" class=\\\"sortable-list connectList agile-list\\\" ng-model=\\\"vm.todoList\\\"><li ng-class=\\\"vm.taskDueStatusClass(task)\\\" ng-repeat=\\\"task in vm.todoList\\\"><div class=\\\"agile-detail\\\"><button type=\\\"button\\\" ng-click=\\\"openTaskDetailsDialog(task)\\\" class=\\\"btn btn-w-m btn-xs btn-link\\\">{{task.title}}</button><p class=\\\"pull-right\\\"><i class=\\\"fa fa-clock-o\\\"></i>{{task.due|date}}</p></div><div class=\\\"agile-detail\\\">{{task.code}}<p class=\\\"pull-right\\\">{{task.responsibleUser.firstName}}</p></div></li></ul></div></div></div><div class=\\\"col-lg-4\\\"><div class=\\\"ibox\\\"><div class=\\\"ibox-content\\\"><h3>Active</h3><p class=\\\"small\\\"><i class=\\\"fa fa-hand-o-up\\\"></i> Drag task between list</p><ul ui-sortable=\\\"vm.sortableOptions\\\" class=\\\"sortable-list connectList agile-list\\\" ng-model=\\\"vm.inProgressList\\\"><li ng-class=\\\"vm.taskDueStatusClass(task)\\\" ng-repeat=\\\"task in vm.inProgressList\\\"><div class=\\\"agile-detail\\\"><button type=\\\"button\\\" ng-click=\\\"openTaskDetailsDialog(task)\\\" class=\\\"btn btn-w-m btn-xs btn-link\\\">{{task.title}}</button><p class=\\\"pull-right\\\"><i class=\\\"fa fa-clock-o\\\"></i>{{task.due|date}}</p></div><div class=\\\"agile-detail\\\">{{task.code}}<p class=\\\"pull-right\\\">{{task.responsibleUser.firstName}}</p></div></li></ul></div></div></div><div class=\\\"col-lg-4\\\"><div class=\\\"ibox\\\"><div class=\\\"ibox-content\\\"><h3>Completed</h3><p class=\\\"small\\\"><i class=\\\"fa fa-hand-o-up\\\"></i> Drag task between list</p><ul ui-sortable=\\\"sortableOptions\\\" class=\\\"sortable-list connectList agile-list\\\" ng-model=\\\"completedList\\\"><li ng-class=\\\"vm.taskDueStatusClass(task)\\\" enablestatus(task)=\\\"\\\" ng-repeat=\\\"task in completedList | freeFormat : taskOrCode | dateRange:daterange.startDate :daterange.endDate | responsibleUser : responsibleUserList.selected | controlCatalogue : controlCatalogue | filter : { title: filterText.name || task, dueStatus : { id : dueStatus }}\\\"><div class=\\\"agile-detail\\\"><button type=\\\"button\\\" ng-click=\\\"openTaskDetailsDialog(task)\\\" class=\\\"btn btn-w-m btn-xs btn-link\\\">{{task.title | cut:true:25:\\' ...\\'}}</button><p class=\\\"pull-right\\\"><i class=\\\"fa fa-clock-o\\\"></i>{{task.due|date}}</p></div><div class=\\\"agile-detail\\\">{{task.code}}<p class=\\\"pull-right\\\">{{task.responsibleUser.firstName}}</p></div></li></ul></div></div></div></div></div>\");\n$templateCache.put(\"app/components/common/content.html\",\"<div id=\\\"wrapper\\\"><div ng-include=\\\"\\'app/components/common/navigation.html\\'\\\"></div><div id=\\\"page-wrapper\\\" class=\\\"gray-bg {{$state.current.name}}\\\"><div ng-include=\\\"\\'app/components/common/topnavbar.html\\'\\\"></div><div ui-view=\\\"\\\"></div><div ng-include=\\\"\\'app/components/common/footer.html\\'\\\"></div></div></div>\");\n$templateCache.put(\"app/components/common/footer.html\",\"<div class=\\\"footer\\\"><div class=\\\"pull-right\\\">10GB of <strong>250GB</strong> Free.</div><div><strong>Copyright</strong> Example Company &copy; 2015-2016</div></div><div></div>\");\n$templateCache.put(\"app/components/common/ibox_tools.html\",\"<div class=\\\"ibox-tools\\\" uib-dropdown=\\\"\\\"><a ng-click=\\\"showhide()\\\"><i class=\\\"fa fa-chevron-up\\\"></i></a> <a uib-dropdown-toggle=\\\"\\\" href=\\\"\\\"><i class=\\\"fa fa-wrench\\\"></i></a><ul uib-dropdown-menu=\\\"\\\"><li><a href=\\\"\\\">Config option 1</a></li><li><a href=\\\"\\\">Config option 2</a></li></ul><a ng-click=\\\"closebox()\\\"><i class=\\\"fa fa-times\\\"></i></a></div>\");\n$templateCache.put(\"app/components/common/navigation.html\",\"<nav class=\\\"navbar-default navbar-static-side\\\" role=\\\"navigation\\\"><div class=\\\"sidebar-collapse\\\"><ul side-navigation=\\\"\\\" class=\\\"nav metismenu\\\" id=\\\"side-menu\\\"><li class=\\\"nav-header\\\"><div class=\\\"profile-element\\\" uib-dropdown=\\\"\\\"><a uib-dropdown-toggle=\\\"\\\" href=\\\"\\\"><span class=\\\"clear\\\"><span class=\\\"block m-t-xs\\\"><strong class=\\\"font-bold\\\">{{main.userName}}</strong></span> <span class=\\\"text-muted text-xs block\\\">Example menu<b class=\\\"caret\\\"></b></span></span></a><ul uib-dropdown-menu=\\\"\\\" class=\\\"animated flipInX m-t-xs\\\"><li><a href=\\\"\\\">Logout</a></li></ul></div><div class=\\\"logo-element\\\">Altius Systems</div></li><li ng-class=\\\"{active: $state.includes(\\'index.dashboards\\')}\\\"><a href=\\\"#\\\"><i class=\\\"fa fa-bar-chart-o\\\"></i> <span class=\\\"nav-label\\\">Dashboards</span> <span class=\\\"fa arrow\\\"></span></a><ul class=\\\"nav nav-second-level collapse\\\" ng-class=\\\"{in: $state.includes(\\'dashboards\\')}\\\"><li ui-sref-active=\\\"active\\\"><a ui-sref=\\\"index.dashboards\\\">Profiles<span class=\\\"label label-primary pull-right\\\">NEW</span></a></li></ul></li><li ng-class=\\\"{active: $state.includes(\\'index.taskboard\\')}\\\" ng-controller=\\\"NavigationController as vm\\\"><a href=\\\"#\\\"><i class=\\\"fa fa-tasks\\\"></i> <span class=\\\"nav-label\\\">Taskboard</span><span class=\\\"fa arrow\\\"></span></a><ul class=\\\"nav nav-second-level collapse\\\" ng-class=\\\"{in: $state.includes(\\'index\\')}\\\"><li ng-class=\\\"vm.bcpNavClass(bcp)\\\" ng-repeat=\\\"bcp in vm.businessControlProfileList\\\"><a ui-sref=\\\"index.taskboard({filterText: 1, bcp: bcp.id})\\\">{{bcp.name}}</a></li></ul><ul class=\\\"nav nav-second-level collapse\\\" ng-class=\\\"{in: $state.includes(\\'index\\')}\\\"><li ng-class=\\\"{active: $state.includes(\\'index\\')}\\\"><a href=\\\"#\\\"><i class=\\\"fa fa-filter\\\"></i> <span class=\\\"nav-label-second-level\\\">Filters</span><span class=\\\"fa arrow\\\"></span></a><ul class=\\\"nav nav-third-level collapse\\\" ng-class=\\\"{in: $state.includes(\\'index\\')}\\\"><li ng-class=\\\"vm.filterNavClass(filter)\\\" ng-repeat=\\\"filter in vm.filters\\\"><a ui-sref=\\\"index.taskboard({filterText: filter.filterId})\\\">{{filter.filterName}}</a></li></ul></li></ul></li><li ui-sref-active=\\\"active\\\"><a ui-sref=\\\"index.minor\\\"><i class=\\\"fa fa-sitemap\\\"></i> <span class=\\\"nav-label\\\">Operations</span></a></li></ul></div></nav>\");\n$templateCache.put(\"app/components/common/topnavbar.html\",\"<div class=\\\"row border-bottom\\\"><nav class=\\\"navbar navbar-static-top white-bg\\\" role=\\\"navigation\\\" style=\\\"margin-bottom: 0\\\"><div class=\\\"navbar-header\\\"><span minimaliza-sidebar=\\\"\\\"></span><form role=\\\"search\\\" class=\\\"navbar-form-custom\\\" method=\\\"post\\\" action=\\\"\\\"><div class=\\\"form-group\\\"><input type=\\\"text\\\" placeholder=\\\"Search for something...\\\" class=\\\"form-control\\\" name=\\\"top-search\\\" id=\\\"top-search\\\"></div></form></div><ul class=\\\"nav navbar-top-links navbar-right\\\"><li><a href=\\\"\\\"><i class=\\\"fa fa-sign-out\\\"></i> Log out</a></li></ul></nav></div>\");}]);"],"sourceRoot":"/source/"}