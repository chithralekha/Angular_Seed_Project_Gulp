{"version":3,"sources":["scripts/app-cb6123d8ea.js"],"names":["angular","module","routerConfig","$stateProvider","$urlRouterProvider","state","url","templateUrl","data","pageTitle","controller","controllerAs","otherwise","$inject","config","dataservice","taskDueStatusClassService","logger","$stateParams","$state","$uibModal","$scope","activate","getTasksSummary","bcp","filterText","then","info","filterId","vm","todoList","inProgressList","completedList","this","userName","helloText","descriptionText","taskDueStatusClass","retrieveTaskDueStatusClass","sortableOptions","connectWith","stop","e","ui","toIndex","item","sortable","index","dropindex","itemdata","destinationList","droptarget","attr","console","log","id","reload","$uibModalInstance","items","content","confirm","close","cancel","dismiss","AuthFactory","specialClass","$localStorage","userService","password","login","authenticate","username","getUserProfile","go","logout","$log","toastr","error","message","title","success","warning","warn","service","showToasts","factory","exception","catcher","reason","exceptionHandlerProvider","appErrorPrefix","undefined","configure","$get","$provide","decorator","extendExceptionHandler","$delegate","exceptionHandler","cause","errorData","provider","$filter","getAllWorkingSets","businessControlProfileList","formatValue","value","ratio","val","Math","abs","USER_ROLES","getWorkingSetsSuccess","workingSets","getWorkingSetsNotification","notification","errorCallback","errorMsg","getAllWorkingSetsComplete","getFiltersSuccess","filters","getFiltersNotification","getAllFiltersComplete","dataFromStorage","getObject","userRoles","userData","isAuthorized","authorizedRoles","isAuthorizedUser","isArray","forEach","roles","indexOf","getAllFilters","bcpNavClass","filterNavClass","filter","filterClass","$http","$location","$q","deferred","defer","tasksPromise","getAllTasks","when","tasksData","allTasks","taskInfos","currentTask","array","taskState","push","tasksSummaryData","resolve","promise","method","baseURL","sendResponseData","sendGetTasksError","response","reject","status","sendGetWorkingSetsError","sendGetFiltersError","$window","store","key","localStorage","get","defaultValue","remove","removeItem","storeObject","JSON","stringify","parse","$cookieFactory","$cookies","put","host","path","domain","$modalFactory","open","size","windowClass","backdrop","keyboard","$rootScope","$","param","grant_type","Config","headers","Content-Type","authPromise","post","authURL","authData","isAuthenticated","bearerToken","access_token","expirationDate","Date","storeUserCredentials","sendAuthError","destroyUserCredentials","destroyUserProfile","TOKEN_KEY","PROFILE_KEY","getUserName","getUserData","credentials","authFac","userProfilePromise","Authorization","userProfileData","userProfile","storeUserProfile","sendGetUserProfileError","task","dueStatusClass","dueStatus","constant","moment","oldTroutBaseURL","all","System","NotificationService","Debugger","Administrator","AccountManager","UserManager","RaciTeamManager","BusinessProcessManager","QlikUser","TaskBoardUser","TaskBoardUserReadOnly","ProgramDesigner","LogViewer","DocumentRepositoryUser","DocumentRepositoryUserReadOnly","IncidentResponseUser","PolicyGeneratorUser","element","document","ready","$timeout","fix_height","heightWithoutNavbar","height","css","navbarHeight","wrapperHeigh","window","hasClass","bind","scroll","scrollTop","addClass","removeClass","width","runBlock","debug","run","abstract","directive","restrict","link","scope","$watch","metisMenu","menuElement","click","toggleClass","sidebar","parent","slimScroll","railOpacity","template","minimalize","hide","fadeIn","removeAttr","listener","event","toState","toParams","fromState","fromParams","text","$on","iElement","iAttrs","onClick","$eval","on","off","$templateCache"],"mappings":"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","file":"scripts/app-cb6123d8ea.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('inspinia', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ngResource', 'ui.router', 'ui.bootstrap','ui.sortable','gridshore.c3js.chart']);\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('inspinia')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider, $urlRouterProvider) {\r\n    $stateProvider\r\n      .state('index.taskboard', {\r\n        url: \"/taskboard/:filterText?bcp\",\r\n        templateUrl: \"app/taskboard/taskboard.html\",\r\n        data: { pageTitle: 'Taskboard' },\r\n        controller: 'TaskboardController',\r\n        controllerAs: 'vm'\r\n                        \r\n      });\r\n\r\n    $urlRouterProvider.otherwise('/index/main');\r\n  }\r\n\r\n})();\r\n\n'use strict';\r\n\r\nangular.module('inspinia')\r\n    .controller('TaskboardController', function (dataservice, taskDueStatusClassService, logger, $stateParams, $state, $uibModal, $scope) {\r\n    \r\n    var vm = this;\r\n    \r\n    vm.userName = 'Example user';\r\n    vm.helloText = 'Taskboard';\r\n    vm.descriptionText = 'Taskboard';\r\n    vm.taskDueStatusClass = taskDueStatusClassService.retrieveTaskDueStatusClass;\r\n    \r\n    //Following function doesnot use the value service pointer.\r\n    //            function(task) {\r\n    //        switch(task.dueStatus.status)\r\n    //        {\r\n    //            case 'Overdue' :\r\n    //                return 'danger-element';\r\n    //                break;\r\n    //            case 'On Time' :\r\n    //                return 'success-element';\r\n    //                break;\r\n    //            case 'In Jeopardy' :\r\n    //                return 'warning-element';\r\n    //                break;\r\n    //        }\r\n    //    };\r\n    \r\n    vm.sortableOptions = {\r\n        connectWith: \".connectList\",\r\n        stop : function(e, ui) {\r\n            var fromIndex = ui.item.sortable.index,\r\n                toIndex = ui.item.sortable.dropindex,\r\n                itemdata = {},\r\n                destinationList = ui.item.sortable.droptarget.attr('ng-model');\r\n            console.log('Destination List = ' + destinationList);\r\n            \r\n            if(destinationList === 'vm.todoList') {\r\n                \r\n                itemdata = vm.todoList[toIndex];\r\n                console.log('item in todoList' + itemdata);\r\n            }\r\n            \r\n            if(destinationList === 'vm.inProgressList') {\r\n                \r\n                itemdata = vm.inProgressList[toIndex];\r\n                console.log('item in inProgressList' + itemdata.id);\r\n            }\r\n            \r\n            if(destinationList === 'vm.completedList') {\r\n                \r\n                itemdata = vm.completedList[toIndex];\r\n                console.log('item in completedList' + itemdata);\r\n            }\r\n        }\r\n    };\r\n//    vm.open = function() {\r\n//        var modalInstance = $uibModal.open( {\r\n//            controller: 'TaskAddEditModalController',\r\n//            controllerAs : 'vm',\r\n//            templateUrl : 'app/taskboard/taskAddEditModal.html',\r\n//            size : 'lg',\r\n//            windowClass: 'app-modal-window',\r\n//            backdrop :'static',\r\n//            keyboard :false\r\n//        });\r\n//    }\r\n    \r\n    activate();\r\n    \r\n    vm.reload = function () {\r\n        $state.reload();\r\n    }\r\n    \r\n    function activate() {\r\n        //Following comment is from the original sorce, CleanCode by John Papa\r\n        //            Using a resolver on all routes or dataservice.ready in every controller\r\n        //            var promises = [getAvengers()];\r\n        //            return dataservice.ready(promises).then(function(){\r\n        \r\n        return getTasksSummary($stateParams.bcp,$stateParams.filterText)\r\n                .then(function () {\r\n                logger.info('Activated Taskboard View');\r\n            });\r\n        }\r\n    \r\n    function getTasksSummary(bcp, filterId) {\r\n        return dataservice.getTasksSummary(bcp, filterId)\r\n            .then(function (data) {\r\n            //alert(data.todoList);\r\n            vm.todoList = data.todoList;\r\n            vm.inProgressList = data.inProgressList;\r\n            vm.completedList = data.completedList;\r\n           return vm.todoList;\r\n        });\r\n    }\r\n});\n'use strict';\r\n\r\nangular.module('inspinia')\r\n    .controller('TaskAddEditModalController', function ($uibModalInstance, items, dataservice, taskDueStatusClassService, logger, $stateParams, $state) {\r\n    \r\n    var vm = this;\r\n    \r\n    vm.userName = 'Example user';\r\n    vm.helloText = 'Taskboard';\r\n    vm.descriptionText = 'Taskboard';\r\n    vm.content = items;\r\n    vm.confirm = $uibModalInstance.close;\r\n    vm.cancel = $uibModalInstance.dismiss;\r\n    \r\n    activate();\r\n    function activate() {\r\n        //Following comment is from the original sorce, CleanCode by John Papa\r\n        //            Using a resolver on all routes or dataservice.ready in every controller\r\n        //            var promises = [getAvengers()];\r\n        //            return dataservice.ready(promises).then(function(){\r\n        \r\n        return getTasksSummary($stateParams.bcp,$stateParams.filterText)\r\n                .then(function () {\r\n                logger.info('Activated Taskboard View');\r\n            });\r\n        }\r\n    \r\n    function getTasksSummary(bcp, filterId) {\r\n        return dataservice.getTasksSummary(bcp, filterId)\r\n            .then(function (data) {\r\n            //alert(data.todoList);\r\n            vm.todoList = data.todoList;\r\n            vm.inProgressList = data.inProgressList;\r\n            vm.completedList = data.completedList;\r\n           return vm.todoList;\r\n        });\r\n    }\r\n});\n'use strict';\r\n\r\nangular.module('inspinia')\r\n  .controller('MainController', function (AuthFactory) {\r\n\r\n    var vm = this;\r\n\r\n    vm.userName = '';\r\n        //AuthFactory.getUserName();\r\n    //alert(vm.userName);\r\n    vm.helloText = 'Welcome in INSPINIA Gulp SeedProject';\r\n    vm.descriptionText = 'It is an application skeleton for a typical AngularJS web app. You can use it to quickly bootstrap your angular webapp projects.';\r\n\r\n  });\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('inspinia')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider, $urlRouterProvider) {\r\n    $stateProvider\r\n      .state('login', {\r\n        url: \"/login\",\r\n        templateUrl: \"app/login/login.html\",\r\n         data: { pageTitle: 'Login', specialClass: 'login-bg' },\r\n        controller: 'LoginController',\r\n        controllerAs: 'vm'\r\n                        \r\n      });\r\n\r\n    $urlRouterProvider.otherwise('/login');\r\n  }\r\n\r\n})();\r\n\nangular.module('inspinia')\r\n    .controller('LoginController', function (dataservice, logger, $state, AuthFactory,$localStorage, userService) {\r\n    \r\n    var vm = this;\r\n    vm.descriptionText = 'Login';\r\n    vm.userName = '';\r\n    vm.password = '';\r\n    \r\n    vm.login = function() {\r\n        \r\n        AuthFactory.authenticate(vm.username, vm.password)\r\n            \r\n            .then(function (data) {\r\n            userService.getUserProfile()\r\n            .then(function (data) {\r\n                 //alert(dataFromStorage.username);\r\n            $state.go('index.dashboards');\r\n            })           \r\n        });\r\n    }\r\n    \r\n    vm.logout = function() {\r\n        AuthFactory.logout();\r\n    }\r\n});\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('inspinia')\r\n        .factory('logger', logger);\r\n\r\n    logger.$inject = ['$log', 'toastr'];\r\n\r\n    function logger($log, toastr) {\r\n        var service = {\r\n            showToasts: true,\r\n\r\n            error   : error,\r\n            info    : info,\r\n            success : success,\r\n            warning : warning,\r\n\r\n            // straight to console; bypass toastr\r\n            log     : $log.log\r\n        };\r\n\r\n        return service;\r\n        /////////////////////\r\n\r\n        function error(message, data, title) {\r\n            toastr.error(message, title);\r\n            $log.error('Error: ' + message, data);\r\n        }\r\n\r\n        function info(message, data, title) {\r\n            toastr.info(message, title);\r\n            $log.info('Info: ' + message, data);\r\n        }\r\n\r\n        function success(message, data, title) {\r\n            toastr.success(message, title);\r\n            $log.info('Success: ' + message, data);\r\n        }\r\n\r\n        function warning(message, data, title) {\r\n            toastr.warning(message, title);\r\n            $log.warn('Warning: ' + message, data);\r\n        }\r\n    }\r\n}());\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('inspinia')\r\n        .factory('exception', exception);\r\n\r\n    /* @ngInject */\r\n    function exception(logger) {\r\n        var service = {\r\n            catcher: catcher\r\n        };\r\n        return service;\r\n\r\n        function catcher(message) {\r\n            return function(reason) {\r\n                logger.error(message, reason);\r\n            };\r\n        }\r\n    }\r\n})();\n// Include in index.html so that app level exceptions are handled.\r\n// Exclude from testRunner.html which should run exactly what it wants to run\r\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('inspinia')\r\n        .provider('exceptionHandler', exceptionHandlerProvider)\r\n        .config(config);\r\n\r\n    /**\r\n     * Must configure the exception handling\r\n     * @return {[type]}\r\n     */\r\n    function exceptionHandlerProvider() {\r\n        /* jshint validthis:true */\r\n        this.config = {\r\n            appErrorPrefix: undefined\r\n        };\r\n\r\n        this.configure = function (appErrorPrefix) {\r\n            this.config.appErrorPrefix = appErrorPrefix;\r\n        };\r\n\r\n        this.$get = function() {\r\n            return {config: this.config};\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Configure by setting an optional string value for appErrorPrefix.\r\n     * Accessible via config.appErrorPrefix (via config value).\r\n     * @param  {[type]} $provide\r\n     * @return {[type]}\r\n     * @ngInject\r\n     */\r\n    function config($provide) {\r\n        $provide.decorator('$exceptionHandler', extendExceptionHandler);\r\n    }\r\n\r\n    /**\r\n     * Extend the $exceptionHandler service to also display a toast.\r\n     * @param  {Object} $delegate\r\n     * @param  {Object} exceptionHandler\r\n     * @param  {Object} logger\r\n     * @return {Function} the decorated $exceptionHandler service\r\n     */\r\n    function extendExceptionHandler($delegate, exceptionHandler, logger) {\r\n        return function(exception, cause) {\r\n            var appErrorPrefix = exceptionHandler.config.appErrorPrefix || '';\r\n            var errorData = {exception: exception, cause: cause};\r\n            exception.message = appErrorPrefix + exception.message;\r\n            $delegate(exception, cause);\r\n            /**\r\n             * Could add the error to a service's collection,\r\n             * add errors to $rootScope, log errors to remote web server,\r\n             * or log locally. Or throw hard. It is entirely up to you.\r\n             * throw exception;\r\n             *\r\n             * @example\r\n             *     throw { message: 'error message we added' };\r\n             */\r\n            logger.error(exception.message, errorData);\r\n        };\r\n    }\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('inspinia')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider, $urlRouterProvider) {\r\n    $stateProvider     \r\n        .state('index.dashboards', {\r\n            url: \"/home\",\r\n            templateUrl:\"app/dashboards/home.html\",\r\n        data: { pageTitle: 'Dashboard' },\r\n        controller: 'DashboardController',\r\n        controllerAs: 'vm'\r\n      });\r\n\r\n\r\n    $urlRouterProvider.otherwise('/index/main');\r\n  }\r\n\r\n})();\r\n\n'use strict';\r\n\r\nangular.module('inspinia')\r\n    .controller('DashboardController', function (dataservice, logger, $filter) {\r\n    \r\n    var vm = this;\r\n    vm.userName = 'Example user';\r\n    vm.helloText = 'Dashboard';\r\n    vm.descriptionText = 'Dashboard';\r\n    \r\n    vm.formatValue = function(value, ratio) {\r\n        var val = Math.abs(value);\r\n        return val;\r\n    }\r\n    \r\n    activate();\r\n    \r\n    function activate() {\r\n        //Following comment is from the original sorce, CleanCode by John Papa\r\n        //            Using a resolver on all routes or dataservice.ready in every controller\r\n        //            var promises = [getAvengers()];\r\n        //            return dataservice.ready(promises).then(function(){\r\n        \r\n        return getAllWorkingSets()\r\n                .then(function () {\r\n                logger.info('Activated Dashboard View');\r\n            });\r\n        }\r\n    \r\n    function getAllWorkingSets() {\r\n        return dataservice.getAllWorkingSets()\r\n            .then(function (data) {\r\n            //alert(data);\r\n            vm.businessControlProfileList = data;\r\n            vm.inProgressList = data.inProgressList;\r\n            vm.completedList = data.completedList;\r\n           return vm.todoList;\r\n        });\r\n    }\r\n});\r\n\n'use strict';\r\n\r\nangular.module('inspinia')\r\n    .controller('NavigationController', function (dataservice, logger, $stateParams, AuthFactory, $localStorage, USER_ROLES, userService) {\r\n    \r\n    var vm = this;\r\n    var dataFromStorage = $localStorage.getObject('Token','{}');\r\n    vm.userName = dataFromStorage.username;\r\n    vm.userRoles = USER_ROLES;\r\n    vm.userData = $localStorage.getObject('Profile', '{}');\r\n    \r\n    vm.isAuthorized = function (authorizedRoles) {\r\n        \r\n        var isAuthorizedUser = false;\r\n        if (!angular.isArray(authorizedRoles)) {\r\n            authorizedRoles = [authorizedRoles];\r\n        }\r\n        angular.forEach(vm.userData.data.roles, function (item) {\r\n            if(authorizedRoles.indexOf(item) !== -1) {\r\n                isAuthorizedUser = true;\r\n            }\r\n        });\r\n        return(isAuthorizedUser);\r\n    };\r\n    \r\n    dataservice.getAllWorkingSets()\r\n        .then(getWorkingSetsSuccess, null, getWorkingSetsNotification)\r\n        .catch(errorCallback)\r\n        .finally(getAllWorkingSetsComplete);\r\n\r\n        function getWorkingSetsSuccess(workingSets) {\r\n            \r\n            vm.businessControlProfileList = workingSets;\r\n        }\r\n\r\n        function getWorkingSetsNotification(notification) {\r\n            console.log('Promise Notification: ' + notification);\r\n        }\r\n\r\n        function errorCallback(errorMsg) {\r\n            console.log('Error Message: ' + errorMsg);\r\n        }\r\n\r\n        function getAllWorkingSetsComplete() {\r\n            console.log('getAllWorkingSets has completed');\r\n        }\r\n    \r\n    dataservice.getAllFilters()\r\n        .then(getFiltersSuccess, null, getFiltersNotification)\r\n        .catch(errorCallback)\r\n        .finally(getAllFiltersComplete);\r\n\r\n        function getFiltersSuccess(filters) {\r\n            \r\n            vm.filters = filters;\r\n        }\r\n\r\n        function getFiltersNotification(notification) {\r\n            \r\n            console.log('Promise Notification: ' + notification);\r\n        }\r\n\r\n        function errorCallback(errorMsg) {\r\n            console.log('Error Message: ' + errorMsg);\r\n        }\r\n\r\n        function getAllFiltersComplete() {\r\n            console.log('getAllFilters has completed');\r\n        }\r\n    \r\n        vm.bcpNavClass = function (bcp) {\r\n            \r\n          return bcp.id ==  $stateParams.bcp ? 'active' : '';  \r\n        };\r\n    \r\n        vm.filterNavClass = function (filter) {\r\n            \r\n            var filterClass = filter.filterId == $stateParams.filterText ? 'active' : '';\r\n            return filterClass\r\n        }\r\n    });\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('inspinia')\r\n        .factory('dataservice', dataservice)\r\n        .factory('AuthFactory', AuthFactory)\r\n        .factory('$localStorage', $localStorage)\r\n        .factory('userService', userService)\r\n        .factory('$cookieFactory', $cookieFactory)\r\n        .factory('$modalFactory', $modalFactory)\r\n        .value('taskDueStatusClassService', {\r\n            retrieveTaskDueStatusClass : retrieveTaskDueStatusClass\r\n        });\r\n\r\n    /* @ngInject */\r\n    function dataservice($http, $location, $q, exception, logger,config) {\r\n        var isPrimed = false;\r\n        var primePromise;\r\n\r\n        var service = {\r\n            \r\n            getTasksSummary : getTasksSummary,\r\n            getAllTasks : getAllTasks,\r\n            getAllWorkingSets : getAllWorkingSets,\r\n            getAllFilters : getAllFilters\r\n            \r\n        };\r\n\r\n        return service;\r\n\r\n        function getTasksSummary(bcp, filterId) {\r\n            \r\n            var deferred = $q.defer();\r\n            \r\n            var tasksPromise = getAllTasks(bcp, filterId);\r\n            \r\n            $q.when(tasksPromise)\r\n            .then(function (tasksData) {\r\n                \r\n                var allTasks = tasksData.taskInfos;\r\n                var todoList = [], inProgressList = [], completedList = [];\r\n                \r\n                allTasks.forEach(function (currentTask, index, array) {\r\n                    \r\n                    if(currentTask.taskState.id === 1)\r\n                        todoList.push(currentTask);\r\n                    else if(currentTask.taskState.id === 2)\r\n                        inProgressList.push(currentTask);\r\n                    else if( currentTask.taskState.id === 3)\r\n                        completedList.push(currentTask);\r\n                });\r\n                \r\n                var tasksSummaryData = {\r\n                    todoList : todoList,\r\n                    inProgressList : inProgressList,\r\n                    completedList : completedList\r\n                    \r\n                };\r\n                \r\n                 deferred.resolve(tasksSummaryData);\r\n            });\r\n           \r\n//            alert(tasksPromise);\r\n            \r\n//            return $http({\r\n//                method: 'GET',\r\n//                url: config.baseURL + 'WorkingSets/'+ bcp + '/Tasks?filterId=' + filterId\r\n//                headers: {\r\n//                    'PS-BookLogger-Version': constants.APP_VERSION\r\n//                },\r\n//                transformResponse: transformGetBooks,\r\n//                cache: true\r\n//            })\r\n            \r\n            //TODO: uncomment the bellow http get if no header specification required.\r\n            //$http.get(config.baseURL + 'WorkingSets/'+ bcp + '/Tasks?filterId=' + filterId)\r\n            //Following .then and .catch applies to both with headers and without headers.\r\n//                .then(getAvengersComplete)\r\n//                .catch(function(message) {\r\n//                    exception.catcher('XHR Failed for getAvengers')(message);\r\n//                    $location.url('/');\r\n//                });\r\n\r\n//            function getAvengersComplete(data, status, headers, config) {\r\n//                return data.data;\r\n//            }\r\n            return deferred.promise;\r\n        }\r\n        \r\n        function getAllTasks(bcp, filterId) {\r\n\r\n            return $http({\r\n                method: 'GET',\r\n                url: config.baseURL + 'workingSets/'+ bcp + '/TaskInfos?filterId=' + filterId\r\n//                headers: {\r\n//                    'PS-BookLogger-Version': constants.APP_VERSION\r\n//                },\r\n//                transformResponse: transformGetBooks,\r\n//                cache: true\r\n            })\r\n            .then(sendResponseData)\r\n            .catch(sendGetTasksError)\r\n\r\n        }\r\n        \r\n        function sendResponseData(response) {\r\n\r\n            return response.data;\r\n\r\n        }\r\n\r\n        function sendGetTasksError(response) {\r\n\r\n            return $q.reject('Error retrieving Tasks. (HTTP status: ' + response.status + ')');\r\n\r\n        }\r\n        \r\n        function getAllWorkingSets() {\r\n            return $http({\r\n                method: 'GET',\r\n                url: config.baseURL + 'WorkingSets/'\r\n//                headers: {\r\n//                    'PS-BookLogger-Version': constants.APP_VERSION\r\n//                },\r\n//                transformResponse: transformGetBooks,\r\n//                cache: true\r\n            })\r\n            .then(sendResponseData)\r\n            .catch(sendGetWorkingSetsError)\r\n        }\r\n        \r\n        function sendGetWorkingSetsError(response) {\r\n\r\n            return $q.reject('Error retrieving WorkingSets. (HTTP status: ' + response.status + ')');\r\n\r\n        }\r\n        \r\n        function getAllFilters() {\r\n            return $http({\r\n                method: 'GET',\r\n                url: config.baseURL + 'Filters/'\r\n//                headers: {\r\n//                    'PS-BookLogger-Version': constants.APP_VERSION\r\n//                },\r\n//                transformResponse: transformGetBooks,\r\n//                cache: true\r\n            })\r\n            .then(sendResponseData)\r\n            .catch(sendGetFiltersError)\r\n            \r\n        }\r\n        \r\n        function sendGetFiltersError(response) {\r\n\r\n            return $q.reject('Error retrieving Filters. (HTTP status: ' + response.status + ')');\r\n\r\n        }\r\n\r\n    }   \r\n    \r\n    function $localStorage($window) {\r\n    return {\r\n        store: function (key, value) {\r\n            $window.localStorage[key] = value;\r\n        },\r\n        get: function (key, defaultValue) {\r\n            return $window.localStorage[key] || defaultValue;\r\n        },\r\n        remove: function (key) {\r\n            $window.localStorage.removeItem(key);\r\n        },\r\n        storeObject: function (key, value) {\r\n            $window.localStorage[key] = JSON.stringify(value);\r\n        },\r\n        getObject: function (key, defaultValue) {\r\n            return JSON.parse($window.localStorage[key] || defaultValue);\r\n        }\r\n    }\r\n    }\r\n    \r\n    function $cookieFactory($cookies, $location) {\r\n    return {\r\n        put: function (key, value) {\r\n            if ($location.host() === 'localhost') {\r\n                $cookies.put(key, value, {'path' : '/' });\r\n            }\r\n            else {\r\n                $cookies.put(key, value, {'domain' : $location.host(), 'path' : '/' });\r\n            }\r\n        },\r\n        get: function (key, defaultValue) {\r\n            return $cookies.get(key) || defaultValue;\r\n        },\r\n        remove: function (key) {\r\n           $cookies.remove(key);\r\n        }\r\n    }\r\n    }\r\n    \r\n    function $modalFactory($uibModal) {\r\n        var open = function (size, title, message) {\r\n            return $uibModal.open({\r\n                controller: 'TaskAddEditModalController',\r\n                controllerAs: 'vm',\r\n                templateUrl : 'app/taskboard/taskAddEditModal.html',\r\n                size: size,\r\n                windowClass: 'app-modal-window',\r\n                backdrop :'static',\r\n                keyboard :false,\r\n                resolve: {\r\n                    items: function() {\r\n                        return {\r\n                            title: title,\r\n                            message: message\r\n                        };\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        \r\n        return {\r\n            open: open\r\n        };\r\n    }\r\n    \r\n    function AuthFactory($rootScope, $http, $location, $q, exception, logger, config, $localStorage, $cookieFactory) {\r\n        \r\n        var authFac = {},\r\n            TOKEN_KEY = 'Token',\r\n            PROFILE_KEY = 'Profile',\r\n            isAuthenticated = false,\r\n            username = '',\r\n            authToken = undefined;\r\n        \r\n        var userData = {\r\n                isAuthenticated: false,\r\n                username: '',\r\n                bearerToken: '',\r\n                expirationDate: null\r\n            };\r\n        \r\n        var authFac = {\r\n            authenticate : authenticate,\r\n            logout : logout,\r\n            getUserName : getUserName,\r\n            getUserData : getUserData\r\n        };\r\n        \r\n        return authFac;\r\n        \r\n        function authenticate(username, password) {\r\n            \r\n            var deferred = $q.defer();\r\n            \r\n            var data = $.param({\r\n                'grant_type' : 'password',\r\n                'username' : username,\r\n                'password' : password\r\n            }),\r\n                Config = {\r\n                    headers : {\r\n                        'Content-Type': 'application/x-www-form-urlencoded'\r\n                    }\r\n                };\r\n            \r\n            var authPromise  =   $http.post(config.authURL + 'oauth/token', data, Config);\r\n\r\n            $q.when(authPromise)\r\n            .then(function (authData) {\r\n                \r\n                userData.isAuthenticated = 'true';\r\n                userData.username = username;\r\n                userData.bearerToken = authData.data.access_token;\r\n                userData.expirationDate = new Date(authData['.expires']);\r\n                \r\n                deferred.resolve(userData);\r\n                \r\n                storeUserCredentials(userData);\r\n            })\r\n            .catch(sendAuthError);\r\n            \r\n            return deferred.promise;\r\n            \r\n        //   return $http.post(config.authURL + 'oauth/token', data, Config)\r\n          \r\n            // following code for some reason gives CORS error.\r\n            //  return $http({\r\n           //     method: 'POST',\r\n           //     url: config.authURL + 'oauth/token',\r\n           //     headers : {\r\n           //             'Content-Type' : 'application/x-www-form-urlencoded'\r\n           //         }\r\n            //                transformResponse: transformGetBooks,\r\n            //                cache: true\r\n            //   })\r\n//            .then(function (response) {\r\n//               storeUserCredentials({username:username, token: response.data.access_token});\r\n//           })\r\n//            .catch(sendAuthError)\r\n        }\r\n        \r\n        function logout () {\r\n            destroyUserCredentials();\r\n            destroyUserProfile();\r\n        }\r\n        \r\n        function destroyUserCredentials() {\r\n            \r\n            userData.isAuthenticated = 'false';\r\n            userData.username = '';\r\n            //userData.bearerToken = authData.access_token;\r\n            //userData.expirationDate = new Date(authData['.expires']);\r\n            //$http.defaults.headers.common['x-access-token'] = authToken;\r\n            $localStorage.remove(TOKEN_KEY);\r\n        }\r\n        \r\n        function destroyUserProfile() {\r\n            \r\n            $localStorage.remove(PROFILE_KEY);\r\n        }\r\n        \r\n        function getUserName () {\r\n            return userData.username;\r\n        }\r\n        \r\n        function getUserData () {\r\n            return userData;\r\n        }\r\n        \r\n        function sendResponseData(response) {\r\n            \r\n            //alert(response.data.access_token);\r\n            //alert('userName =' + response.data);\r\n            storeUserCredentials({username:username, token: response.token});\r\n            //$rootScope.$broadcast('login:Successful');\r\n            return response.data;\r\n\r\n        }\r\n        \r\n        function storeUserCredentials(credentials) {\r\n            \r\n            $localStorage.storeObject(TOKEN_KEY, credentials);\r\n            $cookieFactory.remove('AccessToken');\r\n            //alert(credentials.bearerToken);\r\n            $cookieFactory.put('AccessToken', credentials.bearerToken)\r\n            // Commented below code because this has been handled using $q.defer\r\n            // useCredentials(credentials);\r\n        }\r\n        \r\n        function useCredentials(credentials) {\r\n            isAuthenticated = true;\r\n            username = credentials.username;\r\n            authToken = credentials.token;\r\n            // alert(username);\r\n            // Set the token as header for your requests!\r\n            // $http.defaults.headers.common['x-access-token'] = authToken;\r\n        }\r\n        \r\n        function sendAuthError(response) {\r\n\r\n            return $q.reject('Error retrieving the AuthFac Service. (HTTP status: ' + response.status + ')');\r\n\r\n        }\r\n    }\r\n    \r\n    function userService ($http, $location, $q, exception, logger,config, $cookies, $localStorage) {\r\n        \r\n        var userProfile = {},\r\n            PROFILE_KEY = 'Profile',           \r\n            service = {\r\n                \r\n            getUserProfile : getUserProfile\r\n            \r\n            }\r\n        return service\r\n        \r\n        function getUserProfile() {\r\n            //alert($cookies.get('AccessToken'));\r\n            var deferred = $q.defer();\r\n            \r\n            var userProfilePromise =  $http.get(config.authURL + 'user/profile', {\r\n                        headers: {\r\n                            'Authorization' : 'Bearer ' + $cookies.get('AccessToken')\r\n                        }\r\n                    });\r\n            $q.when(userProfilePromise)\r\n            .then(function (userProfileData) {\r\n                \r\n                userProfile = userProfileData;\r\n                deferred.resolve(userProfile);\r\n                storeUserProfile(userProfile);\r\n                \r\n            })\r\n            .catch(sendGetUserProfileError)\r\n            \r\n            return deferred.promise;\r\n        }\r\n        \r\n        function storeUserProfile(userProfile) {\r\n            \r\n            $localStorage.storeObject(PROFILE_KEY, userProfile);\r\n        }\r\n        \r\n        function sendResponseData(response) {\r\n\r\n            return response.data;\r\n\r\n        }\r\n        \r\n        function sendGetUserProfileError(response) {\r\n\r\n            return $q.reject('Error retrieving User Profile. (HTTP status: ' + response.status + ')');\r\n\r\n        }\r\n    }\r\n    \r\n    function retrieveTaskDueStatusClass(task) {\r\n        var dueStatusClass = null;\r\n        switch(task.dueStatus.status)\r\n        {\r\n            case 'Overdue' :\r\n                dueStatusClass = 'danger-element';\r\n                break;\r\n            case 'On Time' :\r\n                dueStatusClass  = 'success-element';\r\n                break;\r\n            case 'In Jeopardy' :\r\n                dueStatusClass = 'warning-element';\r\n                break;\r\n        }\r\n        return dueStatusClass;\r\n    }\r\n})();\r\n\n/* global toastr:false, moment:false */\r\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('inspinia')\r\n        .constant('toastr', toastr)\r\n        .constant('moment', moment)\r\n        .constant('config', {\r\n        baseURL : 'http://ec2-52-33-130-108.us-west-2.compute.amazonaws.com:8081/MagpieAPI/api/', \r\n        //'http://localhost:3706/api/',\r\n        authURL : 'http://ec2-52-33-130-108.us-west-2.compute.amazonaws.com:8081/MagpieIdentity/',\r\n        //'http://localhost:50443/',\r\n        //           'http://ec2-52-33-130-108.us-west-2.compute.amazonaws.com:8081/MagpieIdentity/',\r\n        //            'http://localhost:50443/',\r\n        //            baseURL : 'http://localhost:3706/api/',\r\n        //            authURL : 'http://ec2-54-148-177-100.us-west-2.compute.amazonaws.com/MagpieIdentity/',\r\n        oldTroutBaseURL : 'http://localhost:9092/Landing/index?n='})\r\n        .constant('USER_ROLES', {\r\n        all : '*',\r\n        System : 'System',\r\n        NotificationService : 'NotificationService',\r\n        Debugger : 'Debugger',\r\n        Administrator : 'Administrator',\r\n        AccountManager : 'AccountManager',\r\n        UserManager : 'UserManager',\r\n        RaciTeamManager : 'RaciTeamManager',\r\n        BusinessProcessManager : 'BusinessProcessManager',\r\n        QlikUser : 'QlikUser',\r\n        TaskBoardUser : 'TaskBoardUser',\r\n        TaskBoardUserReadOnly : 'TaskBoardUserReadOnly',\r\n        ProgramDesigner : 'ProgramDesigner',\r\n        LogViewer : 'LogViewer',\r\n        DocumentRepositoryUser : 'DocumentRepositoryUser',\r\n        DocumentRepositoryUserReadOnly : 'DocumentRepositoryUserReadOnly',\r\n        IncidentResponseUser : 'IncidentResponseUser',\r\n        PolicyGeneratorUser : 'PolicyGeneratorUser'\r\n    });\r\n})();\r\n\n\n/**\r\n * INSPINIA - Responsive Admin Theme\r\n * 2.7\r\n *\r\n * Custom scripts\r\n */\r\n\r\nangular.element(document).ready(function ($timeout) {\r\n\r\n\r\n  // Full height of sidebar\r\n  function fix_height() {\r\n    var heightWithoutNavbar = angular.element(\"body > #wrapper\").height() - 61;\r\n    angular.element(\".sidebar-panel\").css(\"min-height\", heightWithoutNavbar + \"px\");\r\n\r\n    var navbarHeight = angular.element('nav.navbar-default').height();\r\n    var wrapperHeigh = angular.element('#page-wrapper').height();\r\n\r\n    if(navbarHeight > wrapperHeigh){\r\n      angular.element('#page-wrapper').css(\"min-height\", navbarHeight + \"px\");\r\n    }\r\n\r\n    if(navbarHeight < wrapperHeigh){\r\n      angular.element('#page-wrapper').css(\"min-height\", angular.element(window).height()  + \"px\");\r\n    }\r\n\r\n    if (angular.element('body').hasClass('fixed-nav')) {\r\n      if (navbarHeight > wrapperHeigh) {\r\n        angular.element('#page-wrapper').css(\"min-height\", navbarHeight  + \"px\");\r\n      } else {\r\n        angular.element('#page-wrapper').css(\"min-height\", angular.element(window).height() - 60 + \"px\");\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  angular.element(window).bind(\"load resize scroll\", function() {\r\n    if(!angular.element(\"body\").hasClass('body-small')) {\r\n      fix_height();\r\n    }\r\n  });\r\n\r\n  // Move right sidebar top after scroll\r\n  angular.element(window).scroll(function(){\r\n    if (angular.element(window).scrollTop() > 0 && !angular.element('body').hasClass('fixed-nav') ) {\r\n      angular.element('#right-sidebar').addClass('sidebar-top');\r\n    } else {\r\n      angular.element('#right-sidebar').removeClass('sidebar-top');\r\n    }\r\n  });\r\n\r\n  $timeout(function(){\r\n    fix_height();\r\n  });\r\n\r\n  // Minimalize menu when screen is less than 768px\r\n  angular.element(window).bind(\"load resize\", function() {\r\n    if (angular.element(document).width() < 769) {\r\n      angular.element('body').addClass('body-small')\r\n    } else {\r\n      angular.element('body').removeClass('body-small')\r\n    }\r\n  })\r\n\r\n});\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('inspinia')\r\n    .run(runBlock);\r\n\r\n  /** @ngInject */\r\n  function runBlock($log,$rootScope, $state) {\r\n      $rootScope.$state = $state;\r\n    $log.debug('runBlock end');\r\n  }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('inspinia')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider, $urlRouterProvider) {\r\n    $stateProvider\r\n\r\n      .state('index', {\r\n        abstract: true,\r\n        url: \"/index\",\r\n        templateUrl: \"app/components/common/content.html\"\r\n      })\r\n      .state('index.main', {\r\n        url: \"/main\",\r\n        templateUrl: \"app/main/main.html\",\r\n        data: { pageTitle: 'Example view' }\r\n      })\r\n      .state('index.minor', {\r\n        url: \"/minor\",\r\n        templateUrl: \"app/minor/minor.html\",\r\n        data: { pageTitle: 'Example view' }\r\n      });\r\n\r\n    $urlRouterProvider.otherwise('/login');\r\n  }\r\n\r\n})();\r\n\n'use strict';\r\n\r\n//Directive used to set metisMenu and minimalize button\r\nangular.module('inspinia')\r\n    .directive('sideNavigation', function ($timeout) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope, element) {\r\n                // Call metsi to build when user signup\r\n                scope.$watch('authentication.user', function() {\r\n                    $timeout(function() {\r\n                        element.metisMenu();\r\n                    });\r\n                });\r\n\r\n                // Colapse menu in mobile mode after click on element\r\n                var menuElement = angular.element('#side-menu a:not([href$=\"\\\\#\"])');\r\n                menuElement.click(function(){\r\n                  if (angular.element(window).width() < 769) {\r\n                    angular.element(\"body\").toggleClass(\"mini-navbar\");\r\n                  }\r\n                });\r\n\r\n                // Enable initial fixed sidebar\r\n                if (angular.element(\"body\").hasClass('fixed-sidebar')) {\r\n                  var sidebar = element.parent();\r\n                  sidebar.slimScroll({\r\n                    height: '100%',\r\n                    railOpacity: 0.9\r\n                  });\r\n                }\r\n\r\n            }\r\n        };\r\n    })\r\n    .directive('minimalizaSidebar', function ($timeout) {\r\n        return {\r\n            restrict: 'A',\r\n            template: '<a class=\"navbar-minimalize minimalize-styl-2 btn btn-primary \" href=\"\" ng-click=\"minimalize()\"><i class=\"fa fa-bars\"></i></a>',\r\n            controller: function ($scope) {\r\n                $scope.minimalize = function () {\r\n                    angular.element('body').toggleClass('mini-navbar');\r\n                    if (!angular.element('body').hasClass('mini-navbar') || angular.element('body').hasClass('body-small')) {\r\n                        // Hide menu in order to smoothly turn on when maximize menu\r\n                        angular.element('#side-menu').hide();\r\n                        // For smoothly turn on menu\r\n                        $timeout(function () {\r\n                            angular.element('#side-menu').fadeIn(400);\r\n                        }, 200);\r\n                    } else {\r\n                        // Remove all inline style from jquery fadeIn function to reset menu state\r\n                        angular.element('#side-menu').removeAttr('style');\r\n                    }\r\n                };\r\n            }\r\n        };\r\n    })\r\n    .directive('pageTitle', function($rootScope, $timeout) {\r\n    return {\r\n        link: function(scope, element) {\r\n            var listener = function(event, toState, toParams, fromState, fromParams) {\r\n                // Default title - load on Dashboard 1\r\n                var title = 'Altius';\r\n                // Create your own title pattern\r\n                if (toState.data && toState.data.pageTitle) title = 'Altius | ' + toState.data.pageTitle;\r\n                $timeout(function() {\r\n                    element.text(title);\r\n                });\r\n            };\r\n            $rootScope.$on('$stateChangeStart', listener);\r\n        }\r\n    }\r\n})\r\n.directive('modalTrigger', function($modalFactory) {\r\n  return {\r\n    link: function(scope, iElement, iAttrs) {\r\n    function onClick() {\r\n      var size = scope.$eval(iAttrs.size) || 'lg'; // default to large size\r\n      var title = scope.$eval(iAttrs.title) || 'Default Title';\r\n      var message = scope.$eval(iAttrs.message) || 'Default Message';\r\n      $modalFactory.open(size, title, message);\r\n    }\r\n    iElement.on('click', onClick);\r\n    scope.$on('$destroy', function() {\r\n      iElement.off('click', onClick);\r\n    });\r\n  }\r\n  };\r\n});\r\n\r\n\r\n\n\n\n\n\n\nangular.module(\"inspinia\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/dashboards/home.html\",\"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\"><div class=\\\"col-lg-12\\\"><h2>Dashboard</h2><ol class=\\\"breadcrumb\\\"><li>Home</li><li>Dashboards</li><li class=\\\"active\\\"><strong>Dashboard</strong></li></ol></div></div><div class=\\\"wrapper wrapper-content animated fadeInRight\\\"><div class=\\\"row\\\" style=\\\"margin-top:20px; margin-left:5px;\\\" ng-repeat=\\\"item in vm.businessControlProfileList\\\"><div class=\\\"ibox float-e-margins col-lg-8\\\"><div class=\\\"ibox-title\\\"><span class=\\\"label label-primary pull-right\\\" ng-click=\\\"complianceScore(item)\\\"></span><h5>{{item.name}}</h5></div><div class=\\\"ibox-content\\\"><div class=\\\"row\\\"><div class=\\\"col-lg-6\\\" ng-click=\\\"showClick(item)\\\"><c3chart bindto-id=\\\"gauge-plot{{item.id}}-chart\\\"><chart-column column-id=\\\"{{item.name}}\\\" column-color=\\\"{{item.color}}\\\" column-values=\\\"{{item.workingSetCompliance}}\\\" column-type=\\\"gauge\\\"><chart-gauge min=\\\"0%\\\" max=\\\"100%\\\" units=\\\"Score\\\" expand=\\\"true\\\" label-format-function=\\\"vm.formatValue(item.workingSetCompliance,0)\\\"><chart-events on-click-data=\\\"showClick(item)\\\"></chart-events></chart-gauge></chart-column></c3chart></div><div class=\\\"col-lg-6\\\"><div class=\\\"ibox float-e-margins\\\"><div class=\\\"ibox-title\\\"><span class=\\\"label label-primary pull-right hidden\\\" ng-click=\\\"complianceScore(item)\\\">?</span><h5>Control Catalogues</h5><span class=\\\"pull-right\\\"><h5>Compliance Percentage</h5></span></div><div class=\\\"ibox-content\\\"><div><ul class=\\\"list-group clear-list m-t\\\" ng-repeat=\\\"cs in item.workingSetTemplate.controlSets | limitTo:4\\\" ng-init=\\\"outerIndex = $index\\\"><li class=\\\"list-group-item\\\"><span class=\\\"label label-success hidden\\\">{{outerIndex + 1}}</span> <span class=\\\"pull-right\\\" ng-class=\\\"controlSetComplianceClass(cs)\\\">{{cs.controlSetCompliance}} %</span><span class=\\\"label label-success\\\"></span>{{cs.title }}</li></ul><ul class=\\\"list-group clear-list m-t\\\"><li class=\\\"list-group-item\\\"><span class=\\\"label label-primary pull-right\\\"></span></li></ul></div></div></div><a ui-sref=\\\"dashboards.dashboardSingleWorkingSet({obj: item})\\\"><span class=\\\"label label-primary pull-right\\\">More....</span></a></div><div class=\\\"col-lg-3 hidden\\\"><div class=\\\"ibox float-e-margins\\\"><div class=\\\"ibox-title\\\"><span class=\\\"label label-primary pull-right\\\" ng-click=\\\"complianceScore(item)\\\"></span><h5>Users</h5></div><div class=\\\"ibox-content\\\"><ul class=\\\"list-group clear-list m-t\\\" ng-repeat=\\\"user in item.users | limitTo:4\\\"><li class=\\\"list-group-item clear-list\\\"><span class=\\\"label label-success\\\"></span>{{user.userName}}</li></ul><ul class=\\\"list-group clear-list m-t\\\"><li class=\\\"list-group-item\\\"><span class=\\\"label label-primary pull-right\\\"></span></li></ul></div></div></div></div></div></div></div></div>\");\n$templateCache.put(\"app/taskboard/taskAddEditModal.html\",\"<div class=\\\"ibox\\\"><div class=\\\"ibox-content\\\"><form role=\\\"form\\\" name=\\\"signup_form2\\\" novalidate=\\\"\\\" ng-submit=\\\"vm.confirm()\\\"><div class=\\\"modal-header\\\"><h3 class=\\\"modal-title\\\">{{vm.content.title}}</h3></div><div class=\\\"modal-body\\\">{{vm.content.message}}</div><div class=\\\"modal-footer\\\"><button class=\\\"ad-button ad-blue\\\" type=\\\"button\\\" ng-click=\\\"vm.confirm()\\\">confirm</button> <button class=\\\"ad-button ad-blue\\\" type=\\\"button\\\" ng-click=\\\"vm.cancel()\\\">cancel</button> <button type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"vm.cancel()\\\">X</button></div></form></div></div>\");\n$templateCache.put(\"app/taskboard/taskboard.html\",\"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\"><div class=\\\"col-lg-12\\\"><h2>Task Board</h2><ol class=\\\"breadcrumb\\\"><li>Home</li><li>{{vm.descriptionText}}</li><li class=\\\"active\\\"><strong>{{vm.descriptionText}}</strong></li></ol></div></div><div class=\\\"wrapper wrapper-content animated fadeInRight\\\"><div class=\\\"row\\\"><div class=\\\"col-lg-4\\\"><div class=\\\"ibox\\\"><div class=\\\"ibox-content\\\"><h3>New</h3><button ng-click=\\\"vm.reload()\\\" class=\\\"fa fa-refresh hidden\\\">Reload</button> <button modal-trigger=\\\"\\\" size=\\\"\\'sm\\'\\\" title=\\\"\\'Hello World!\\'\\\" message=\\\"\\'This is a test\\'\\\">Click Me</button><p class=\\\"small\\\"><i class=\\\"fa fa-hand-o-up\\\"></i> Drag task between list</p><div class=\\\"input-group\\\"><input type=\\\"text\\\" placeholder=\\\"Add new task.\\\" class=\\\"input input-sm form-control\\\" ng-model=\\\"taskTitle\\\"> <span class=\\\"input-group-btn\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-white\\\" ng-click=\\\"openTaskDetailsDialog(null)\\\"><i class=\\\"fa fa-plus\\\"></i> Add task</button></span></div><ul ui-sortable=\\\"vm.sortableOptions\\\" class=\\\"sortable-list connectList agile-list\\\" ng-model=\\\"vm.todoList\\\"><li ng-class=\\\"vm.taskDueStatusClass(task)\\\" ng-repeat=\\\"task in vm.todoList\\\"><div class=\\\"agile-detail\\\"><button type=\\\"button\\\" modal-trigger=\\\"\\\" size=\\\"\\'sm\\'\\\" title=\\\"\\'{{task.title}}\\'\\\" message=\\\"\\'This is a test\\'\\\" class=\\\"btn btn-w-m btn-xs btn-link\\\">{{task.title}}</button><p class=\\\"pull-right\\\"><i class=\\\"fa fa-clock-o\\\"></i>{{task.due|date}}</p></div><div class=\\\"agile-detail\\\">{{task.code}}<p class=\\\"pull-right\\\">{{task.responsibleUser.firstName}}</p></div></li></ul></div></div></div><div class=\\\"col-lg-4\\\"><div class=\\\"ibox\\\"><div class=\\\"ibox-content\\\"><h3>Active</h3><p class=\\\"small\\\"><i class=\\\"fa fa-hand-o-up\\\"></i> Drag task between list</p><ul ui-sortable=\\\"vm.sortableOptions\\\" class=\\\"sortable-list connectList agile-list\\\" ng-model=\\\"vm.inProgressList\\\"><li ng-class=\\\"vm.taskDueStatusClass(task)\\\" ng-repeat=\\\"task in vm.inProgressList\\\"><div class=\\\"agile-detail\\\"><button type=\\\"button\\\" ng-click=\\\"vm.open()\\\" class=\\\"btn btn-w-m btn-xs btn-link\\\">{{task.title}}</button><p class=\\\"pull-right\\\"><i class=\\\"fa fa-clock-o\\\"></i>{{task.due|date}}</p></div><div class=\\\"agile-detail\\\">{{task.code}}<p class=\\\"pull-right\\\">{{task.responsibleUser.firstName}}</p></div></li></ul></div></div></div><div class=\\\"col-lg-4\\\"><div class=\\\"ibox\\\"><div class=\\\"ibox-content\\\"><h3>Completed</h3><p class=\\\"small\\\"><i class=\\\"fa fa-hand-o-up\\\"></i> Drag task between list</p><ul ui-sortable=\\\"sortableOptions\\\" class=\\\"sortable-list connectList agile-list\\\" ng-model=\\\"completedList\\\"><li ng-class=\\\"vm.taskDueStatusClass(task)\\\" enablestatus(task)=\\\"\\\" ng-repeat=\\\"task in completedList | freeFormat : taskOrCode | dateRange:daterange.startDate :daterange.endDate | responsibleUser : responsibleUserList.selected | controlCatalogue : controlCatalogue | filter : { title: filterText.name || task, dueStatus : { id : dueStatus }}\\\"><div class=\\\"agile-detail\\\"><button type=\\\"button\\\" ng-click=\\\"openTaskDetailsDialog(task)\\\" class=\\\"btn btn-w-m btn-xs btn-link\\\">{{task.title | cut:true:25:\\' ...\\'}}</button><p class=\\\"pull-right\\\"><i class=\\\"fa fa-clock-o\\\"></i>{{task.due|date}}</p></div><div class=\\\"agile-detail\\\">{{task.code}}<p class=\\\"pull-right\\\">{{task.responsibleUser.firstName}}</p></div></li></ul></div></div></div></div></div>\");\n$templateCache.put(\"app/main/main.html\",\"<div class=\\\"wrapper wrapper-content animated fadeInRight\\\"><div class=\\\"row\\\"><div class=\\\"col-lg-12\\\"><div class=\\\"text-center m-t-lg\\\"><h1>{{main.helloText}}</h1><small>{{main.descriptionText}} <i class=\\\"glyphicon glyphicon-pencil\\\"></i></small></div></div></div></div>\");\n$templateCache.put(\"app/login/login.html\",\"<div class=\\\"middle-box text-center loginscreen animated fadeInDown\\\"><div><form class=\\\"m-t\\\" role=\\\"form\\\" id=\\\"login-form\\\" ng-submit=\\\"vm.login();\\\"><div class=\\\"row\\\" ng-repeat=\\\"error in errors\\\"><div class=\\\"alert alert-danger\\\">{{error}}</div></div><div class=\\\"form-group\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" required=\\\"\\\" ng-model=\\\"vm.username\\\"></div><div class=\\\"form-group\\\"><input type=\\\"password\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required=\\\"\\\" ng-model=\\\"vm.password\\\"></div><button id=\\\"login-form-submit-button\\\" type=\\\"submit\\\" class=\\\"btn btn-primary block full-width m-b\\\">Login</button></form></div></div>\");\n$templateCache.put(\"app/minor/minor.html\",\"<div class=\\\"wrapper wrapper-content animated fadeInRight\\\"><div class=\\\"row\\\"><div class=\\\"col-lg-12\\\"><div class=\\\"text-center m-t-lg\\\"><h1>Simple example of second view</h1><small>Configure in app.js as index.minor state.</small></div></div></div></div>\");\n$templateCache.put(\"app/components/common/content.html\",\"<div id=\\\"wrapper\\\"><div ng-include=\\\"\\'app/components/common/navigation.html\\'\\\"></div><div id=\\\"page-wrapper\\\" class=\\\"gray-bg {{$state.current.name}}\\\"><div ng-include=\\\"\\'app/components/common/topnavbar.html\\'\\\"></div><div ui-view=\\\"\\\"></div><div ng-include=\\\"\\'app/components/common/footer.html\\'\\\"></div></div></div>\");\n$templateCache.put(\"app/components/common/footer.html\",\"<div class=\\\"footer\\\"><div class=\\\"pull-right\\\">10GB of <strong>250GB</strong> Free.</div><div><strong>Copyright</strong> Example Company &copy; 2015-2016</div></div><div></div>\");\n$templateCache.put(\"app/components/common/ibox_tools.html\",\"<div class=\\\"ibox-tools\\\" uib-dropdown=\\\"\\\"><a ng-click=\\\"showhide()\\\"><i class=\\\"fa fa-chevron-up\\\"></i></a> <a uib-dropdown-toggle=\\\"\\\" href=\\\"\\\"><i class=\\\"fa fa-wrench\\\"></i></a><ul uib-dropdown-menu=\\\"\\\"><li><a href=\\\"\\\">Config option 1</a></li><li><a href=\\\"\\\">Config option 2</a></li></ul><a ng-click=\\\"closebox()\\\"><i class=\\\"fa fa-times\\\"></i></a></div>\");\n$templateCache.put(\"app/components/common/navigation.html\",\"<nav class=\\\"navbar-default navbar-static-side\\\" role=\\\"navigation\\\"><div class=\\\"sidebar-collapse\\\" ng-controller=\\\"NavigationController as vm\\\"><ul side-navigation=\\\"\\\" class=\\\"nav metismenu\\\" id=\\\"side-menu\\\"><li class=\\\"nav-header\\\"><div class=\\\"profile-element\\\" uib-dropdown=\\\"\\\"><a uib-dropdown-toggle=\\\"\\\" href=\\\"\\\"><i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i> <span class=\\\"clear\\\"><span class=\\\"block m-t-xs\\\"><strong class=\\\"font-bold\\\">{{vm.userName}}</strong></span></span></a><ul uib-dropdown-menu=\\\"\\\" class=\\\"animated flipInX m-t-xs\\\"><li><a href=\\\"\\\">Logout</a></li></ul></div><div class=\\\"logo-element\\\">Altius Systems</div></li><li ng-class=\\\"{active: $state.includes(\\'index.dashboards\\')}\\\"><a href=\\\"#\\\"><i class=\\\"fa fa-bar-chart-o\\\"></i> <span class=\\\"nav-label\\\">Dashboards</span> <span class=\\\"fa arrow\\\"></span></a><ul class=\\\"nav nav-second-level collapse\\\" ng-class=\\\"{in: $state.includes(\\'dashboards\\')}\\\"><li ui-sref-active=\\\"active\\\" ng-show=\\\"vm.isAuthorized([vm.userRoles.System, vm.userRoles.Debugger, vm.userRoles.Administrator, vm.userRoles.QlikUser])\\\"><a ui-sref=\\\"index.dashboards\\\">Profiles<span class=\\\"label label-primary pull-right\\\">NEW</span></a></li></ul></li><li ng-class=\\\"{active: $state.includes(\\'index.taskboard\\')}\\\"><a href=\\\"#\\\"><i class=\\\"fa fa-tasks\\\"></i> <span class=\\\"nav-label\\\">Taskboard</span><span class=\\\"fa arrow\\\"></span></a><ul class=\\\"nav nav-second-level collapse\\\" ng-class=\\\"{in: $state.includes(\\'index\\')}\\\"><li ng-class=\\\"vm.bcpNavClass(bcp)\\\" ng-repeat=\\\"bcp in vm.businessControlProfileList\\\"><a ui-sref=\\\"index.taskboard({filterText: 1, bcp: bcp.id})\\\">{{bcp.name}}</a></li></ul><ul class=\\\"nav nav-second-level collapse\\\" ng-class=\\\"{in: $state.includes(\\'index\\')}\\\"><li ng-class=\\\"{active: $state.includes(\\'index\\')}\\\"><a href=\\\"#\\\"><i class=\\\"fa fa-filter\\\"></i> <span class=\\\"nav-label-second-level\\\">Filters</span><span class=\\\"fa arrow\\\"></span></a><ul class=\\\"nav nav-third-level collapse\\\" ng-class=\\\"{in: $state.includes(\\'index\\')}\\\"><li ng-class=\\\"vm.filterNavClass(filter)\\\" ng-repeat=\\\"filter in vm.filters\\\"><a ui-sref=\\\"index.taskboard({filterText: filter.filterId})\\\">{{filter.filterName}}</a></li></ul></li></ul></li><li ui-sref-active=\\\"active\\\"><a ui-sref=\\\"index.minor\\\"><i class=\\\"fa fa-sitemap\\\"></i> <span class=\\\"nav-label\\\">Operations</span></a></li></ul></div></nav>\");\n$templateCache.put(\"app/components/common/topnavbar.html\",\"<div class=\\\"row border-bottom\\\"><nav class=\\\"navbar navbar-static-top white-bg\\\" role=\\\"navigation\\\" style=\\\"margin-bottom: 0\\\"><div class=\\\"navbar-header\\\"><span minimaliza-sidebar=\\\"\\\"></span><form role=\\\"search\\\" class=\\\"navbar-form-custom\\\" method=\\\"post\\\" action=\\\"\\\"><div class=\\\"form-group\\\"><input type=\\\"text\\\" placeholder=\\\"Search for something...\\\" class=\\\"form-control\\\" name=\\\"top-search\\\" id=\\\"top-search\\\"></div></form></div><ul class=\\\"nav navbar-top-links navbar-right\\\" ng-controller=\\\"LoginController as vm\\\"><li><a ui-sref=\\\"login\\\" ng-click=\\\"vm.logout()\\\"><i class=\\\"fa fa-sign-out\\\"></i> Log out</a></li></ul></nav></div>\");}]);"],"sourceRoot":"/source/"}