{"version":3,"sources":["scripts/app-ebca2c9578.js"],"names":["angular","module","routerConfig","$stateProvider","$urlRouterProvider","state","url","templateUrl","data","pageTitle","controller","controllerAs","otherwise","$inject","config","dataservice","taskDueStatusClassService","logger","$stateParams","$state","activate","getTasksSummary","bcp","filterText","then","info","filterId","vm","todoList","inProgressList","completedList","this","userName","helloText","descriptionText","taskDueStatusClass","retrieveTaskDueStatusClass","sortableOptions","connectWith","reload","AuthFactory","specialClass","$localStorage","password","login","authenticate","username","getObject","go","logout","$log","toastr","error","message","title","success","warning","warn","service","showToasts","log","factory","exception","catcher","reason","exceptionHandlerProvider","appErrorPrefix","undefined","configure","$get","$provide","decorator","extendExceptionHandler","$delegate","exceptionHandler","cause","errorData","provider","$filter","getAllWorkingSets","businessControlProfileList","formatValue","value","ratio","val","Math","abs","getWorkingSetsSuccess","workingSets","getWorkingSetsNotification","notification","errorCallback","errorMsg","console","getAllWorkingSetsComplete","getFiltersSuccess","filters","getFiltersNotification","getAllFiltersComplete","dataFromStorage","getAllFilters","bcpNavClass","id","filterNavClass","filter","filterClass","$http","$location","$q","deferred","defer","tasksPromise","getAllTasks","when","tasksData","allTasks","tasks","forEach","currentTask","index","array","taskState","push","tasksSummaryData","resolve","promise","method","baseURL","sendResponseData","sendGetTasksError","response","reject","status","sendGetWorkingSetsError","sendGetFiltersError","$window","store","key","localStorage","get","defaultValue","remove","removeItem","storeObject","JSON","stringify","parse","$resource","$rootScope","$","param","grant_type","Config","headers","Content-Type","authPromise","post","authURL","authData","userData","isAuthenticated","bearerToken","access_token","expirationDate","Date","storeUserCredentials","sendAuthError","destroyUserCredentials","TOKEN_KEY","getUserName","getUserData","credentials","authFac","task","dueStatusClass","dueStatus","constant","moment","oldTroutBaseURL","element","document","ready","$timeout","fix_height","heightWithoutNavbar","height","css","navbarHeight","wrapperHeigh","window","hasClass","bind","scroll","scrollTop","addClass","removeClass","width","runBlock","debug","run","abstract","directive","restrict","link","scope","$watch","metisMenu","menuElement","click","toggleClass","sidebar","parent","slimScroll","railOpacity","template","$scope","minimalize","hide","fadeIn","removeAttr","listener","event","toState","toParams","fromState","fromParams","text","$on","$templateCache","put"],"mappings":"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","file":"scripts/app-ebca2c9578.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('inspinia', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ngResource', 'ui.router', 'ui.bootstrap', 'ngRoute','oc.lazyLoad', 'ui.sortable','gridshore.c3js.chart']);\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('inspinia')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider, $urlRouterProvider) {\r\n    $stateProvider\r\n      .state('index.taskboard', {\r\n        url: \"/taskboard/:filterText?bcp\",\r\n        templateUrl: \"app/taskboard/taskboard.html\",\r\n        data: { pageTitle: 'Taskboard' },\r\n        controller: 'TaskboardController',\r\n        controllerAs: 'vm'\r\n                        \r\n      });\r\n\r\n    $urlRouterProvider.otherwise('/index/main');\r\n  }\r\n\r\n})();\r\n\n'use strict';\r\n\r\nangular.module('inspinia')\r\n    .controller('TaskboardController', function (dataservice, taskDueStatusClassService, logger, $stateParams, $state) {\r\n    \r\n    var vm = this;\r\n    \r\n    vm.userName = 'Example user';\r\n    vm.helloText = 'Taskboard';\r\n    vm.descriptionText = 'Taskboard';\r\n    vm.taskDueStatusClass = taskDueStatusClassService.retrieveTaskDueStatusClass;\r\n    \r\n    //Following function doesnot use the value service pointer.\r\n    //            function(task) {\r\n    //        switch(task.dueStatus.status)\r\n    //        {\r\n    //            case 'Overdue' :\r\n    //                return 'danger-element';\r\n    //                break;\r\n    //            case 'On Time' :\r\n    //                return 'success-element';\r\n    //                break;\r\n    //            case 'In Jeopardy' :\r\n    //                return 'warning-element';\r\n    //                break;\r\n    //        }\r\n    //    };\r\n    \r\n    vm.sortableOptions = {\r\n        connectWith: \".connectList\"\r\n    };\r\n    \r\n    activate();\r\n    \r\n    vm.reload = function () {\r\n        //alert('Hi');\r\n        //activate();\r\n        $state.reload();\r\n    }\r\n    \r\n    function activate() {\r\n        //Following comment is from the original sorce, CleanCode by John Papa\r\n        //            Using a resolver on all routes or dataservice.ready in every controller\r\n        //            var promises = [getAvengers()];\r\n        //            return dataservice.ready(promises).then(function(){\r\n        \r\n        return getTasksSummary($stateParams.bcp,$stateParams.filterText)\r\n                .then(function () {\r\n                logger.info('Activated Taskboard View');\r\n            });\r\n        }\r\n    \r\n    function getTasksSummary(bcp, filterId) {\r\n        return dataservice.getTasksSummary(bcp, filterId)\r\n            .then(function (data) {\r\n            //alert(data.todoList);\r\n            vm.todoList = data.todoList;\r\n            vm.inProgressList = data.inProgressList;\r\n            vm.completedList = data.completedList;\r\n           return vm.todoList;\r\n        });\r\n    }\r\n});\r\n\r\n//        function getAvengers() {\r\n//            return dataservice.getAvengers().then(function (data) {\r\n//                vm.todoList = data.tasks;\r\n//                vm.inProgressList = data.tasks;\r\n//                return vm.todoList;\r\n//            });\r\n//        }\r\n//    });\r\n\n'use strict';\n\nangular.module('inspinia')\n  .controller('MainController', function (AuthFactory) {\n\n    var vm = this;\n\n    vm.userName = '';\n        //AuthFactory.getUserName();\n    //alert(vm.userName);\n    vm.helloText = 'Welcome in INSPINIA Gulp SeedProject';\n    vm.descriptionText = 'It is an application skeleton for a typical AngularJS web app. You can use it to quickly bootstrap your angular webapp projects.';\n\n  });\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('inspinia')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider, $urlRouterProvider) {\r\n    $stateProvider\r\n      .state('login', {\r\n        url: \"/login\",\r\n        templateUrl: \"app/login/login.html\",\r\n         data: { pageTitle: 'Login', specialClass: 'login-bg' },\r\n        controller: 'LoginController',\r\n        controllerAs: 'vm'\r\n                        \r\n      });\r\n\r\n    $urlRouterProvider.otherwise('/login');\r\n  }\r\n\r\n})();\r\n\nangular.module('inspinia')\r\n    .controller('LoginController', function (dataservice, logger, $state, AuthFactory,$localStorage) {\r\n    var vm = this;\r\n    vm.descriptionText = 'Login';\r\n    vm.userName = '';\r\n    vm.password = '';\r\n    \r\n    vm.login = function() {\r\n        \r\n        AuthFactory.authenticate(vm.username, vm.password)\r\n            \r\n            .then(function (data) {\r\n            \r\n            var dataFromStorage = $localStorage.getObject('Token','{}');\r\n            //alert(dataFromStorage.username);\r\n            $state.go('index.dashboards');\r\n        });\r\n    }\r\n    \r\n    vm.logout = function() {\r\n        AuthFactory.logout();\r\n    }\r\n    \r\n//     activate();\r\n    \r\n    function activate() {\r\n        //Following comment is from the original sorce, CleanCode by John Papa\r\n        //            Using a resolver on all routes or dataservice.ready in every controller\r\n        //            var promises = [getAvengers()];\r\n        //            return dataservice.ready(promises).then(function(){\r\n        \r\n        return getAllWorkingSets()\r\n                .then(function () {\r\n                logger.info('Activated Dashboard View');\r\n            });\r\n        }\r\n    function getAllWorkingSets() {\r\n        return dataservice.getAllWorkingSets()\r\n            .then(function (data) {\r\n            //alert(data);\r\n            vm.businessControlProfileList = data;\r\n            vm.inProgressList = data.inProgressList;\r\n            vm.completedList = data.completedList;\r\n           return vm.todoList;\r\n        });\r\n    }\r\n    \r\n    });\r\n\n(function() {\n    'use strict';\n\n    angular\n        .module('inspinia')\n        .factory('logger', logger);\n\n    logger.$inject = ['$log', 'toastr'];\n\n    function logger($log, toastr) {\n        var service = {\n            showToasts: true,\n\n            error   : error,\n            info    : info,\n            success : success,\n            warning : warning,\n\n            // straight to console; bypass toastr\n            log     : $log.log\n        };\n\n        return service;\n        /////////////////////\n\n        function error(message, data, title) {\n            toastr.error(message, title);\n            $log.error('Error: ' + message, data);\n        }\n\n        function info(message, data, title) {\n            toastr.info(message, title);\n            $log.info('Info: ' + message, data);\n        }\n\n        function success(message, data, title) {\n            toastr.success(message, title);\n            $log.info('Success: ' + message, data);\n        }\n\n        function warning(message, data, title) {\n            toastr.warning(message, title);\n            $log.warn('Warning: ' + message, data);\n        }\n    }\n}());\n\n(function() {\n    'use strict';\n\n    angular\n        .module('inspinia')\n        .factory('exception', exception);\n\n    /* @ngInject */\n    function exception(logger) {\n        var service = {\n            catcher: catcher\n        };\n        return service;\n\n        function catcher(message) {\n            return function(reason) {\n                logger.error(message, reason);\n            };\n        }\n    }\n})();\n// Include in index.html so that app level exceptions are handled.\n// Exclude from testRunner.html which should run exactly what it wants to run\n(function() {\n    'use strict';\n\n    angular\n        .module('inspinia')\n        .provider('exceptionHandler', exceptionHandlerProvider)\n        .config(config);\n\n    /**\n     * Must configure the exception handling\n     * @return {[type]}\n     */\n    function exceptionHandlerProvider() {\n        /* jshint validthis:true */\n        this.config = {\n            appErrorPrefix: undefined\n        };\n\n        this.configure = function (appErrorPrefix) {\n            this.config.appErrorPrefix = appErrorPrefix;\n        };\n\n        this.$get = function() {\n            return {config: this.config};\n        };\n    }\n\n    /**\n     * Configure by setting an optional string value for appErrorPrefix.\n     * Accessible via config.appErrorPrefix (via config value).\n     * @param  {[type]} $provide\n     * @return {[type]}\n     * @ngInject\n     */\n    function config($provide) {\n        $provide.decorator('$exceptionHandler', extendExceptionHandler);\n    }\n\n    /**\n     * Extend the $exceptionHandler service to also display a toast.\n     * @param  {Object} $delegate\n     * @param  {Object} exceptionHandler\n     * @param  {Object} logger\n     * @return {Function} the decorated $exceptionHandler service\n     */\n    function extendExceptionHandler($delegate, exceptionHandler, logger) {\n        return function(exception, cause) {\n            var appErrorPrefix = exceptionHandler.config.appErrorPrefix || '';\n            var errorData = {exception: exception, cause: cause};\n            exception.message = appErrorPrefix + exception.message;\n            $delegate(exception, cause);\n            /**\n             * Could add the error to a service's collection,\n             * add errors to $rootScope, log errors to remote web server,\n             * or log locally. Or throw hard. It is entirely up to you.\n             * throw exception;\n             *\n             * @example\n             *     throw { message: 'error message we added' };\n             */\n            logger.error(exception.message, errorData);\n        };\n    }\n})();\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('inspinia')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider, $urlRouterProvider) {\r\n    $stateProvider     \r\n        .state('index.dashboards', {\r\n            url: \"/home\",\r\n            templateUrl:\"app/dashboards/home.html\",\r\n        data: { pageTitle: 'Dashboard' },\r\n        controller: 'DashboardController',\r\n        controllerAs: 'vm'\r\n      });\r\n\r\n\r\n    $urlRouterProvider.otherwise('/index/main');\r\n  }\r\n\r\n})();\r\n\n'use strict';\r\n\r\nangular.module('inspinia')\r\n    .controller('DashboardController', function (dataservice, logger, $filter) {\r\n    \r\n        var vm = this;\r\n\r\n        vm.userName = 'Example user';\r\n        vm.helloText = 'Dashboard';\r\n        vm.descriptionText = 'Dashboard';\r\n        \r\n        vm.formatValue = function(value, ratio) {\r\n            var val = Math.abs(value);\r\n            return val;\r\n        }\r\n     activate();\r\n    \r\n    function activate() {\r\n        //Following comment is from the original sorce, CleanCode by John Papa\r\n        //            Using a resolver on all routes or dataservice.ready in every controller\r\n        //            var promises = [getAvengers()];\r\n        //            return dataservice.ready(promises).then(function(){\r\n        \r\n        return getAllWorkingSets()\r\n                .then(function () {\r\n                logger.info('Activated Dashboard View');\r\n            });\r\n        }\r\n    function getAllWorkingSets() {\r\n        return dataservice.getAllWorkingSets()\r\n            .then(function (data) {\r\n            //alert(data);\r\n            vm.businessControlProfileList = data;\r\n            vm.inProgressList = data.inProgressList;\r\n            vm.completedList = data.completedList;\r\n           return vm.todoList;\r\n        });\r\n    }\r\n    \r\n    });\r\n\n'use strict';\r\n\r\nangular.module('inspinia')\r\n    .controller('NavigationController', function (dataservice, logger, $stateParams, AuthFactory, $localStorage) {\r\n    \r\n        var vm = this;\r\n        var dataFromStorage = $localStorage.getObject('Token','{}');\r\n        vm.userName = dataFromStorage.username;\r\n        vm.helloText = 'Taskboard';\r\n        vm.descriptionText = 'Taskboard';\r\n        \r\n        dataservice.getAllWorkingSets()\r\n            .then(getWorkingSetsSuccess, null, getWorkingSetsNotification)\r\n            .catch(errorCallback)\r\n            .finally(getAllWorkingSetsComplete);\r\n\r\n        function getWorkingSetsSuccess(workingSets) {\r\n            //throw 'error in success handler';\r\n            vm.businessControlProfileList = workingSets;\r\n            //alert(vm.businessControlProfileList);\r\n        }\r\n\r\n        function getWorkingSetsNotification(notification) {\r\n            //console.log('Promise Notification: ' + notification);\r\n        }\r\n\r\n        function errorCallback(errorMsg) {\r\n            console.log('Error Message: ' + errorMsg);\r\n        }\r\n\r\n        function getAllWorkingSetsComplete() {\r\n            //console.log('getAllBooks has completed');\r\n        }\r\n\r\n//        vm.businessControlProfileList = [\r\n//            {\r\n//                id : 1,\r\n//                name : 'bcp1'\r\n//            },\r\n//            {\r\n//                id : 2,\r\n//                name : 'bcp2'\r\n//            },\r\n//            {\r\n//                id : 3,\r\n//                name : 'bcp3'\r\n//            },\r\n//            {\r\n//                id : 4,\r\n//                name : 'bcp4'\r\n//            }\r\n//        ];\r\n    dataservice.getAllFilters()\r\n            .then(getFiltersSuccess, null, getFiltersNotification)\r\n            .catch(errorCallback)\r\n            .finally(getAllFiltersComplete);\r\n\r\n        function getFiltersSuccess(filters) {\r\n            //throw 'error in success handler';\r\n            vm.filters = filters;\r\n            //alert(vm.filters);\r\n        }\r\n\r\n        function getFiltersNotification(notification) {\r\n            console.log('Promise Notification: ' + notification);\r\n        }\r\n\r\n        function errorCallback(errorMsg) {\r\n            console.log('Error Message: ' + errorMsg);\r\n        }\r\n\r\n        function getAllFiltersComplete() {\r\n            console.log('getAllFilters has completed');\r\n        }\r\n//        vm.filters = [\r\n//            {\r\n//                id : 1,\r\n//                name : 'No Filter'\r\n//            },\r\n//            {\r\n//                id : 2,\r\n//                name : 'Unassigned'\r\n//            },\r\n//            {\r\n//                id : 3,\r\n//                name : 'Overdue'\r\n//            }\r\n//        ];\r\n        vm.bcpNavClass = function (bcp) {\r\n            //alert( $stateParams.bcp);\r\n          return bcp.id ==  $stateParams.bcp ? 'active' : '';  \r\n        };\r\n        vm.filterNavClass = function (filter) {\r\n            //alert('FilterID =' + filter.id);\r\n            //alert('FilterText =' + $stateParams.filterText);\r\n            var filterClass = filter.filterId == $stateParams.filterText ? 'active' : '';\r\n            //alert(filterClass);\r\n            return filterClass\r\n        }\r\n    });\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('inspinia')\r\n        .factory('dataservice', dataservice)\r\n        .factory('AuthFactory', AuthFactory)\r\n        .factory('$localStorage', $localStorage)\r\n        .value('taskDueStatusClassService', {\r\n            retrieveTaskDueStatusClass : retrieveTaskDueStatusClass\r\n        });\r\n\r\n    /* @ngInject */\r\n    function dataservice($http, $location, $q, exception, logger,config) {\r\n        var isPrimed = false;\r\n        var primePromise;\r\n\r\n        var service = {\r\n            \r\n            getTasksSummary : getTasksSummary,\r\n            getAllTasks : getAllTasks,\r\n            getAllWorkingSets : getAllWorkingSets,\r\n            getAllFilters : getAllFilters\r\n            \r\n        };\r\n\r\n        return service;\r\n\r\n        function getTasksSummary(bcp, filterId) {\r\n            \r\n            var deferred = $q.defer();\r\n            \r\n            var tasksPromise = getAllTasks(bcp, filterId);\r\n            \r\n            $q.when(tasksPromise)\r\n            .then(function (tasksData) {\r\n                \r\n                var allTasks = tasksData.tasks;\r\n                var todoList = [], inProgressList = [], completedList = [];\r\n                \r\n                allTasks.forEach(function (currentTask, index, array) {\r\n                    \r\n                    if(currentTask.taskState.id === 1)\r\n                        todoList.push(currentTask);\r\n                    else if(currentTask.taskState.id === 2)\r\n                        inProgressList.push(currentTask);\r\n                    else if( currentTask.taskState.id === 3)\r\n                        completedList.push(currentTask);\r\n                });\r\n                \r\n                var tasksSummaryData = {\r\n                    todoList : todoList,\r\n                    inProgressList : inProgressList,\r\n                    completedList : completedList\r\n                    \r\n                };\r\n                \r\n                 deferred.resolve(tasksSummaryData);\r\n            });\r\n           \r\n//            alert(tasksPromise);\r\n            \r\n//            return $http({\r\n//                method: 'GET',\r\n//                url: config.baseURL + 'WorkingSets/'+ bcp + '/Tasks?filterId=' + filterId\r\n//                headers: {\r\n//                    'PS-BookLogger-Version': constants.APP_VERSION\r\n//                },\r\n//                transformResponse: transformGetBooks,\r\n//                cache: true\r\n//            })\r\n            \r\n            //TODO: uncomment the bellow http get if no header specification required.\r\n            //$http.get(config.baseURL + 'WorkingSets/'+ bcp + '/Tasks?filterId=' + filterId)\r\n            //Following .then and .catch applies to both with headers and without headers.\r\n//                .then(getAvengersComplete)\r\n//                .catch(function(message) {\r\n//                    exception.catcher('XHR Failed for getAvengers')(message);\r\n//                    $location.url('/');\r\n//                });\r\n\r\n//            function getAvengersComplete(data, status, headers, config) {\r\n//                return data.data;\r\n//            }\r\n            return deferred.promise;\r\n        }\r\n        \r\n        function getAllTasks(bcp, filterId) {\r\n\r\n            return $http({\r\n                method: 'GET',\r\n                url: config.baseURL + 'WorkingSets/'+ bcp + '/Tasks?filterId=' + filterId\r\n//                headers: {\r\n//                    'PS-BookLogger-Version': constants.APP_VERSION\r\n//                },\r\n//                transformResponse: transformGetBooks,\r\n//                cache: true\r\n            })\r\n            .then(sendResponseData)\r\n            .catch(sendGetTasksError)\r\n\r\n        }\r\n        \r\n        function sendResponseData(response) {\r\n\r\n            return response.data;\r\n\r\n        }\r\n\r\n        function sendGetTasksError(response) {\r\n\r\n            return $q.reject('Error retrieving Tasks. (HTTP status: ' + response.status + ')');\r\n\r\n        }\r\n        \r\n        function getAllWorkingSets() {\r\n            return $http({\r\n                method: 'GET',\r\n                url: config.baseURL + 'WorkingSets/'\r\n//                headers: {\r\n//                    'PS-BookLogger-Version': constants.APP_VERSION\r\n//                },\r\n//                transformResponse: transformGetBooks,\r\n//                cache: true\r\n            })\r\n            .then(sendResponseData)\r\n            .catch(sendGetWorkingSetsError)\r\n        }\r\n        \r\n        function sendGetWorkingSetsError(response) {\r\n\r\n            return $q.reject('Error retrieving WorkingSets. (HTTP status: ' + response.status + ')');\r\n\r\n        }\r\n        \r\n        function getAllFilters() {\r\n            return $http({\r\n                method: 'GET',\r\n                url: config.baseURL + 'Filters/'\r\n//                headers: {\r\n//                    'PS-BookLogger-Version': constants.APP_VERSION\r\n//                },\r\n//                transformResponse: transformGetBooks,\r\n//                cache: true\r\n            })\r\n            .then(sendResponseData)\r\n            .catch(sendGetFiltersError)\r\n            \r\n        }\r\n        \r\n        function sendGetFiltersError(response) {\r\n\r\n            return $q.reject('Error retrieving Filters. (HTTP status: ' + response.status + ')');\r\n\r\n        }\r\n\r\n    }\r\n    \r\n    function $localStorage($window) {\r\n    return {\r\n        store: function (key, value) {\r\n            $window.localStorage[key] = value;\r\n        },\r\n        get: function (key, defaultValue) {\r\n            return $window.localStorage[key] || defaultValue;\r\n        },\r\n        remove: function (key) {\r\n            $window.localStorage.removeItem(key);\r\n        },\r\n        storeObject: function (key, value) {\r\n            $window.localStorage[key] = JSON.stringify(value);\r\n        },\r\n        getObject: function (key, defaultValue) {\r\n            return JSON.parse($window.localStorage[key] || defaultValue);\r\n        }\r\n    }\r\n    }\r\n    \r\n    function AuthFactory($resource, $rootScope, $http, $location, $q, exception, logger, config, $localStorage) {\r\n        \r\n        var authFac = {},\r\n            TOKEN_KEY = 'Token',\r\n            isAuthenticated = false,\r\n            username = '',\r\n            authToken = undefined;\r\n        \r\n        var userData = {\r\n                isAuthenticated: false,\r\n                username: '',\r\n                bearerToken: '',\r\n                expirationDate: null\r\n            };\r\n        \r\n        var authFac = {\r\n            authenticate : authenticate,\r\n            logout : logout,\r\n            getUserName : getUserName,\r\n            getUserData : getUserData\r\n        };\r\n        \r\n        return authFac;\r\n        \r\n        function authenticate(username, password) {\r\n            \r\n            var deferred = $q.defer();\r\n            \r\n            var data = $.param({\r\n                'grant_type' : 'password',\r\n                'username' : username,\r\n                'password' : password\r\n            }),\r\n                Config = {\r\n                    headers : {\r\n                        'Content-Type': 'application/x-www-form-urlencoded'\r\n                    }\r\n                };\r\n            \r\n            var authPromise  =   $http.post(config.authURL + 'oauth/token', data, Config);\r\n\r\n            $q.when(authPromise)\r\n            .then(function (authData) {\r\n                \r\n                userData.isAuthenticated = 'true';\r\n                userData.username = username;\r\n                userData.bearerToken = authData.access_token;\r\n                userData.expirationDate = new Date(authData['.expires']);\r\n                \r\n                deferred.resolve(userData);\r\n                \r\n                storeUserCredentials(userData);\r\n            })\r\n            .catch(sendAuthError);\r\n            \r\n            return deferred.promise;\r\n            \r\n        //   return $http.post(config.authURL + 'oauth/token', data, Config)\r\n          \r\n            // following code for some reason gives CORS error.\r\n            //  return $http({\r\n           //     method: 'POST',\r\n           //     url: config.authURL + 'oauth/token',\r\n           //     headers : {\r\n           //             'Content-Type' : 'application/x-www-form-urlencoded'\r\n           //         }\r\n            //                transformResponse: transformGetBooks,\r\n            //                cache: true\r\n            //   })\r\n//            .then(function (response) {\r\n//               storeUserCredentials({username:username, token: response.data.access_token});\r\n//           })\r\n//            .catch(sendAuthError)\r\n        }\r\n        \r\n        function logout () {\r\n            destroyUserCredentials();\r\n        }\r\n        \r\n        function destroyUserCredentials() {\r\n            \r\n            userData.isAuthenticated = 'false';\r\n            userData.username = '';\r\n            //userData.bearerToken = authData.access_token;\r\n            //userData.expirationDate = new Date(authData['.expires']);\r\n            //$http.defaults.headers.common['x-access-token'] = authToken;\r\n            $localStorage.remove(TOKEN_KEY);\r\n        }\r\n        \r\n        function getUserName () {\r\n            return userData.username;\r\n        }\r\n        \r\n        function getUserData () {\r\n            return userData;\r\n        }\r\n        \r\n        function sendResponseData(response) {\r\n            \r\n            //alert(response.data.access_token);\r\n            //alert('userName =' + response.data);\r\n            storeUserCredentials({username:username, token: response.token});\r\n            //$rootScope.$broadcast('login:Successful');\r\n            return response.data;\r\n\r\n        }\r\n        \r\n        function storeUserCredentials(credentials) {\r\n            \r\n            $localStorage.storeObject(TOKEN_KEY, credentials);\r\n            // Commented below code because this has been handled using $q.defer\r\n            // useCredentials(credentials);\r\n        }\r\n        \r\n        function useCredentials(credentials) {\r\n            isAuthenticated = true;\r\n            username = credentials.username;\r\n            authToken = credentials.token;\r\n            // alert(username);\r\n            // Set the token as header for your requests!\r\n            // $http.defaults.headers.common['x-access-token'] = authToken;\r\n        }\r\n        \r\n        function sendAuthError(response) {\r\n\r\n            return $q.reject('Error retrieving the AuthFac Service. (HTTP status: ' + response.status + ')');\r\n\r\n        }\r\n    }\r\n    \r\n    function retrieveTaskDueStatusClass(task) {\r\n        var dueStatusClass = null;\r\n        switch(task.dueStatus.status)\r\n        {\r\n            case 'Overdue' :\r\n                dueStatusClass = 'danger-element';\r\n                break;\r\n            case 'On Time' :\r\n                dueStatusClass  = 'success-element';\r\n                break;\r\n            case 'In Jeopardy' :\r\n                dueStatusClass = 'warning-element';\r\n                break;\r\n        }\r\n        return dueStatusClass;\r\n    }\r\n})();\r\n\n/* global toastr:false, moment:false */\n(function() {\n    'use strict';\n\n    angular\n        .module('inspinia')\n        .constant('toastr', toastr)\n        .constant('moment', moment)\n        .constant('config', {\n        baseURL : 'http://localhost:3706/api/',\n        authURL : 'http://localhost:50443/',\n        //           'http://ec2-52-33-130-108.us-west-2.compute.amazonaws.com:8081/MagpieIdentity/',\n        //            'http://localhost:50443/',\n        //            baseURL : 'http://localhost:3706/api/',\n        //            authURL : 'http://ec2-54-148-177-100.us-west-2.compute.amazonaws.com/MagpieIdentity/',\n        oldTroutBaseURL : 'http://localhost:9092/Landing/index?n='\n    });\n})();\n\n\n/**\n * INSPINIA - Responsive Admin Theme\n * 2.7\n *\n * Custom scripts\n */\n\nangular.element(document).ready(function ($timeout) {\n\n\n  // Full height of sidebar\n  function fix_height() {\n    var heightWithoutNavbar = angular.element(\"body > #wrapper\").height() - 61;\n    angular.element(\".sidebar-panel\").css(\"min-height\", heightWithoutNavbar + \"px\");\n\n    var navbarHeight = angular.element('nav.navbar-default').height();\n    var wrapperHeigh = angular.element('#page-wrapper').height();\n\n    if(navbarHeight > wrapperHeigh){\n      angular.element('#page-wrapper').css(\"min-height\", navbarHeight + \"px\");\n    }\n\n    if(navbarHeight < wrapperHeigh){\n      angular.element('#page-wrapper').css(\"min-height\", angular.element(window).height()  + \"px\");\n    }\n\n    if (angular.element('body').hasClass('fixed-nav')) {\n      if (navbarHeight > wrapperHeigh) {\n        angular.element('#page-wrapper').css(\"min-height\", navbarHeight  + \"px\");\n      } else {\n        angular.element('#page-wrapper').css(\"min-height\", angular.element(window).height() - 60 + \"px\");\n      }\n    }\n\n  }\n\n  angular.element(window).bind(\"load resize scroll\", function() {\n    if(!angular.element(\"body\").hasClass('body-small')) {\n      fix_height();\n    }\n  });\n\n  // Move right sidebar top after scroll\n  angular.element(window).scroll(function(){\n    if (angular.element(window).scrollTop() > 0 && !angular.element('body').hasClass('fixed-nav') ) {\n      angular.element('#right-sidebar').addClass('sidebar-top');\n    } else {\n      angular.element('#right-sidebar').removeClass('sidebar-top');\n    }\n  });\n\n  $timeout(function(){\n    fix_height();\n  });\n\n  // Minimalize menu when screen is less than 768px\n  angular.element(window).bind(\"load resize\", function() {\n    if (angular.element(document).width() < 769) {\n      angular.element('body').addClass('body-small')\n    } else {\n      angular.element('body').removeClass('body-small')\n    }\n  })\n\n});\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('inspinia')\r\n    .run(runBlock);\r\n\r\n  /** @ngInject */\r\n  function runBlock($log,$rootScope, $state) {\r\n      $rootScope.$state = $state;\r\n    $log.debug('runBlock end');\r\n  }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('inspinia')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider, $urlRouterProvider) {\r\n    $stateProvider\r\n\r\n      .state('index', {\r\n        abstract: true,\r\n        url: \"/index\",\r\n        templateUrl: \"app/components/common/content.html\"\r\n      })\r\n      .state('index.main', {\r\n        url: \"/main\",\r\n        templateUrl: \"app/main/main.html\",\r\n        data: { pageTitle: 'Example view' }\r\n      })\r\n      .state('index.minor', {\r\n        url: \"/minor\",\r\n        templateUrl: \"app/minor/minor.html\",\r\n        data: { pageTitle: 'Example view' }\r\n      });\r\n\r\n    $urlRouterProvider.otherwise('/login');\r\n  }\r\n\r\n})();\r\n\n'use strict';\r\n\r\n//Directive used to set metisMenu and minimalize button\r\nangular.module('inspinia')\r\n    .directive('sideNavigation', function ($timeout) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function (scope, element) {\r\n                // Call metsi to build when user signup\r\n                scope.$watch('authentication.user', function() {\r\n                    $timeout(function() {\r\n                        element.metisMenu();\r\n                    });\r\n                });\r\n\r\n                // Colapse menu in mobile mode after click on element\r\n                var menuElement = angular.element('#side-menu a:not([href$=\"\\\\#\"])');\r\n                menuElement.click(function(){\r\n                  if (angular.element(window).width() < 769) {\r\n                    angular.element(\"body\").toggleClass(\"mini-navbar\");\r\n                  }\r\n                });\r\n\r\n                // Enable initial fixed sidebar\r\n                if (angular.element(\"body\").hasClass('fixed-sidebar')) {\r\n                  var sidebar = element.parent();\r\n                  sidebar.slimScroll({\r\n                    height: '100%',\r\n                    railOpacity: 0.9\r\n                  });\r\n                }\r\n\r\n            }\r\n        };\r\n    })\r\n    .directive('minimalizaSidebar', function ($timeout) {\r\n        return {\r\n            restrict: 'A',\r\n            template: '<a class=\"navbar-minimalize minimalize-styl-2 btn btn-primary \" href=\"\" ng-click=\"minimalize()\"><i class=\"fa fa-bars\"></i></a>',\r\n            controller: function ($scope) {\r\n                $scope.minimalize = function () {\r\n                    angular.element('body').toggleClass('mini-navbar');\r\n                    if (!angular.element('body').hasClass('mini-navbar') || angular.element('body').hasClass('body-small')) {\r\n                        // Hide menu in order to smoothly turn on when maximize menu\r\n                        angular.element('#side-menu').hide();\r\n                        // For smoothly turn on menu\r\n                        $timeout(function () {\r\n                            angular.element('#side-menu').fadeIn(400);\r\n                        }, 200);\r\n                    } else {\r\n                        // Remove all inline style from jquery fadeIn function to reset menu state\r\n                        angular.element('#side-menu').removeAttr('style');\r\n                    }\r\n                };\r\n            }\r\n        };\r\n    })\r\n    .directive('pageTitle', function($rootScope, $timeout) {\r\n    return {\r\n        link: function(scope, element) {\r\n            var listener = function(event, toState, toParams, fromState, fromParams) {\r\n                // Default title - load on Dashboard 1\r\n                var title = 'Altius';\r\n                // Create your own title pattern\r\n                if (toState.data && toState.data.pageTitle) title = 'Altius | ' + toState.data.pageTitle;\r\n                $timeout(function() {\r\n                    element.text(title);\r\n                });\r\n            };\r\n            $rootScope.$on('$stateChangeStart', listener);\r\n        }\r\n    }\r\n});\r\n\r\n\r\n\n\n\n\n\n\nangular.module(\"inspinia\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/dashboards/home.html\",\"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\"><div class=\\\"col-lg-12\\\"><h2>Dashboard</h2><ol class=\\\"breadcrumb\\\"><li>Home</li><li>Dashboards</li><li class=\\\"active\\\"><strong>Dashboard</strong></li></ol></div></div><div class=\\\"wrapper wrapper-content animated fadeInRight\\\"><div class=\\\"row\\\" style=\\\"margin-top:20px; margin-left:5px;\\\" ng-repeat=\\\"item in vm.businessControlProfileList\\\"><div class=\\\"ibox float-e-margins col-lg-8\\\"><div class=\\\"ibox-title\\\"><span class=\\\"label label-primary pull-right\\\" ng-click=\\\"complianceScore(item)\\\"></span><h5>{{item.name}}</h5></div><div class=\\\"ibox-content\\\"><div class=\\\"row\\\"><div class=\\\"col-lg-6\\\" ng-click=\\\"showClick(item)\\\"><c3chart bindto-id=\\\"gauge-plot{{item.id}}-chart\\\"><chart-column column-id=\\\"{{item.name}}\\\" column-color=\\\"{{item.color}}\\\" column-values=\\\"{{item.workingSetCompliance}}\\\" column-type=\\\"gauge\\\"><chart-gauge min=\\\"0%\\\" max=\\\"100%\\\" units=\\\"Score\\\" expand=\\\"true\\\" label-format-function=\\\"vm.formatValue(item.workingSetCompliance,0)\\\"><chart-events on-click-data=\\\"showClick(item)\\\"></chart-events></chart-gauge></chart-column></c3chart></div><div class=\\\"col-lg-6\\\"><div class=\\\"ibox float-e-margins\\\"><div class=\\\"ibox-title\\\"><span class=\\\"label label-primary pull-right hidden\\\" ng-click=\\\"complianceScore(item)\\\">?</span><h5>Control Catalogues</h5><span class=\\\"pull-right\\\"><h5>Compliance Percentage</h5></span></div><div class=\\\"ibox-content\\\"><div><ul class=\\\"list-group clear-list m-t\\\" ng-repeat=\\\"cs in item.workingSetTemplate.controlSets | limitTo:4\\\" ng-init=\\\"outerIndex = $index\\\"><li class=\\\"list-group-item\\\"><span class=\\\"label label-success hidden\\\">{{outerIndex + 1}}</span> <span class=\\\"pull-right\\\" ng-class=\\\"controlSetComplianceClass(cs)\\\">{{cs.controlSetCompliance}} %</span><span class=\\\"label label-success\\\"></span>{{cs.title }}</li></ul><ul class=\\\"list-group clear-list m-t\\\"><li class=\\\"list-group-item\\\"><span class=\\\"label label-primary pull-right\\\"></span></li></ul></div></div></div><a ui-sref=\\\"dashboards.dashboardSingleWorkingSet({obj: item})\\\"><span class=\\\"label label-primary pull-right\\\">More....</span></a></div><div class=\\\"col-lg-3 hidden\\\"><div class=\\\"ibox float-e-margins\\\"><div class=\\\"ibox-title\\\"><span class=\\\"label label-primary pull-right\\\" ng-click=\\\"complianceScore(item)\\\"></span><h5>Users</h5></div><div class=\\\"ibox-content\\\"><ul class=\\\"list-group clear-list m-t\\\" ng-repeat=\\\"user in item.users | limitTo:4\\\"><li class=\\\"list-group-item clear-list\\\"><span class=\\\"label label-success\\\"></span>{{user.userName}}</li></ul><ul class=\\\"list-group clear-list m-t\\\"><li class=\\\"list-group-item\\\"><span class=\\\"label label-primary pull-right\\\"></span></li></ul></div></div></div></div></div></div></div></div>\");\n$templateCache.put(\"app/login/login.html\",\"<div class=\\\"middle-box text-center loginscreen animated fadeInDown\\\"><div><form class=\\\"m-t\\\" role=\\\"form\\\" id=\\\"login-form\\\" ng-submit=\\\"vm.login();\\\"><div class=\\\"row\\\" ng-repeat=\\\"error in errors\\\"><div class=\\\"alert alert-danger\\\">{{error}}</div></div><div class=\\\"form-group\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" required=\\\"\\\" ng-model=\\\"vm.username\\\"></div><div class=\\\"form-group\\\"><input type=\\\"password\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required=\\\"\\\" ng-model=\\\"vm.password\\\"></div><button id=\\\"login-form-submit-button\\\" type=\\\"submit\\\" class=\\\"btn btn-primary block full-width m-b\\\">Login</button></form></div></div>\");\n$templateCache.put(\"app/taskboard/taskboard.html\",\"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\"><div class=\\\"col-lg-12\\\"><h2>Task Board</h2><ol class=\\\"breadcrumb\\\"><li>Home</li><li>{{vm.descriptionText}}</li><li class=\\\"active\\\"><strong>{{vm.descriptionText}}</strong></li></ol></div></div><div class=\\\"wrapper wrapper-content animated fadeInRight\\\"><div class=\\\"row\\\"><div class=\\\"col-lg-4\\\"><div class=\\\"ibox\\\"><div class=\\\"ibox-content\\\"><h3>New</h3><button ng-click=\\\"vm.reload()\\\" class=\\\"fa fa-refresh hidden\\\">Reload</button><p class=\\\"small\\\"><i class=\\\"fa fa-hand-o-up\\\"></i> Drag task between list</p><div class=\\\"input-group\\\"><input type=\\\"text\\\" placeholder=\\\"Add new task.\\\" class=\\\"input input-sm form-control\\\" ng-model=\\\"taskTitle\\\"> <span class=\\\"input-group-btn\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-white\\\" ng-click=\\\"openTaskDetailsDialog(null)\\\"><i class=\\\"fa fa-plus\\\"></i> Add task</button></span></div><ul ui-sortable=\\\"vm.sortableOptions\\\" class=\\\"sortable-list connectList agile-list\\\" ng-model=\\\"vm.todoList\\\"><li ng-class=\\\"vm.taskDueStatusClass(task)\\\" ng-repeat=\\\"task in vm.todoList\\\"><div class=\\\"agile-detail\\\"><button type=\\\"button\\\" ng-click=\\\"openTaskDetailsDialog(task)\\\" class=\\\"btn btn-w-m btn-xs btn-link\\\">{{task.title}}</button><p class=\\\"pull-right\\\"><i class=\\\"fa fa-clock-o\\\"></i>{{task.due|date}}</p></div><div class=\\\"agile-detail\\\">{{task.code}}<p class=\\\"pull-right\\\">{{task.responsibleUser.firstName}}</p></div></li></ul></div></div></div><div class=\\\"col-lg-4\\\"><div class=\\\"ibox\\\"><div class=\\\"ibox-content\\\"><h3>Active</h3><p class=\\\"small\\\"><i class=\\\"fa fa-hand-o-up\\\"></i> Drag task between list</p><ul ui-sortable=\\\"vm.sortableOptions\\\" class=\\\"sortable-list connectList agile-list\\\" ng-model=\\\"vm.inProgressList\\\"><li ng-class=\\\"vm.taskDueStatusClass(task)\\\" ng-repeat=\\\"task in vm.inProgressList\\\"><div class=\\\"agile-detail\\\"><button type=\\\"button\\\" ng-click=\\\"openTaskDetailsDialog(task)\\\" class=\\\"btn btn-w-m btn-xs btn-link\\\">{{task.title}}</button><p class=\\\"pull-right\\\"><i class=\\\"fa fa-clock-o\\\"></i>{{task.due|date}}</p></div><div class=\\\"agile-detail\\\">{{task.code}}<p class=\\\"pull-right\\\">{{task.responsibleUser.firstName}}</p></div></li></ul></div></div></div><div class=\\\"col-lg-4\\\"><div class=\\\"ibox\\\"><div class=\\\"ibox-content\\\"><h3>Completed</h3><p class=\\\"small\\\"><i class=\\\"fa fa-hand-o-up\\\"></i> Drag task between list</p><ul ui-sortable=\\\"sortableOptions\\\" class=\\\"sortable-list connectList agile-list\\\" ng-model=\\\"completedList\\\"><li ng-class=\\\"vm.taskDueStatusClass(task)\\\" enablestatus(task)=\\\"\\\" ng-repeat=\\\"task in completedList | freeFormat : taskOrCode | dateRange:daterange.startDate :daterange.endDate | responsibleUser : responsibleUserList.selected | controlCatalogue : controlCatalogue | filter : { title: filterText.name || task, dueStatus : { id : dueStatus }}\\\"><div class=\\\"agile-detail\\\"><button type=\\\"button\\\" ng-click=\\\"openTaskDetailsDialog(task)\\\" class=\\\"btn btn-w-m btn-xs btn-link\\\">{{task.title | cut:true:25:\\' ...\\'}}</button><p class=\\\"pull-right\\\"><i class=\\\"fa fa-clock-o\\\"></i>{{task.due|date}}</p></div><div class=\\\"agile-detail\\\">{{task.code}}<p class=\\\"pull-right\\\">{{task.responsibleUser.firstName}}</p></div></li></ul></div></div></div></div></div>\");\n$templateCache.put(\"app/main/main.html\",\"<div class=\\\"wrapper wrapper-content animated fadeInRight\\\"><div class=\\\"row\\\"><div class=\\\"col-lg-12\\\"><div class=\\\"text-center m-t-lg\\\"><h1>{{main.helloText}}</h1><small>{{main.descriptionText}} <i class=\\\"glyphicon glyphicon-pencil\\\"></i></small></div></div></div></div>\");\n$templateCache.put(\"app/minor/minor.html\",\"<div class=\\\"wrapper wrapper-content animated fadeInRight\\\"><div class=\\\"row\\\"><div class=\\\"col-lg-12\\\"><div class=\\\"text-center m-t-lg\\\"><h1>Simple example of second view</h1><small>Configure in app.js as index.minor state.</small></div></div></div></div>\");\n$templateCache.put(\"app/components/common/content.html\",\"<div id=\\\"wrapper\\\"><div ng-include=\\\"\\'app/components/common/navigation.html\\'\\\"></div><div id=\\\"page-wrapper\\\" class=\\\"gray-bg {{$state.current.name}}\\\"><div ng-include=\\\"\\'app/components/common/topnavbar.html\\'\\\"></div><div ui-view=\\\"\\\"></div><div ng-include=\\\"\\'app/components/common/footer.html\\'\\\"></div></div></div>\");\n$templateCache.put(\"app/components/common/footer.html\",\"<div class=\\\"footer\\\"><div class=\\\"pull-right\\\">10GB of <strong>250GB</strong> Free.</div><div><strong>Copyright</strong> Example Company &copy; 2015-2016</div></div><div></div>\");\n$templateCache.put(\"app/components/common/ibox_tools.html\",\"<div class=\\\"ibox-tools\\\" uib-dropdown=\\\"\\\"><a ng-click=\\\"showhide()\\\"><i class=\\\"fa fa-chevron-up\\\"></i></a> <a uib-dropdown-toggle=\\\"\\\" href=\\\"\\\"><i class=\\\"fa fa-wrench\\\"></i></a><ul uib-dropdown-menu=\\\"\\\"><li><a href=\\\"\\\">Config option 1</a></li><li><a href=\\\"\\\">Config option 2</a></li></ul><a ng-click=\\\"closebox()\\\"><i class=\\\"fa fa-times\\\"></i></a></div>\");\n$templateCache.put(\"app/components/common/navigation.html\",\"<nav class=\\\"navbar-default navbar-static-side\\\" role=\\\"navigation\\\"><div class=\\\"sidebar-collapse\\\" ng-controller=\\\"NavigationController as vm\\\"><ul side-navigation=\\\"\\\" class=\\\"nav metismenu\\\" id=\\\"side-menu\\\"><li class=\\\"nav-header\\\"><div class=\\\"profile-element\\\" uib-dropdown=\\\"\\\"><a uib-dropdown-toggle=\\\"\\\" href=\\\"\\\"><span class=\\\"clear\\\"><span class=\\\"block m-t-xs\\\"><strong class=\\\"font-bold\\\">{{vm.userName}}</strong></span> <span class=\\\"text-muted text-xs block\\\">Example menu<b class=\\\"caret\\\"></b></span></span></a><ul uib-dropdown-menu=\\\"\\\" class=\\\"animated flipInX m-t-xs\\\"><li><a href=\\\"\\\">Logout</a></li></ul></div><div class=\\\"logo-element\\\">Altius Systems</div></li><li ng-class=\\\"{active: $state.includes(\\'index.dashboards\\')}\\\"><a href=\\\"#\\\"><i class=\\\"fa fa-bar-chart-o\\\"></i> <span class=\\\"nav-label\\\">Dashboards</span> <span class=\\\"fa arrow\\\"></span></a><ul class=\\\"nav nav-second-level collapse\\\" ng-class=\\\"{in: $state.includes(\\'dashboards\\')}\\\"><li ui-sref-active=\\\"active\\\"><a ui-sref=\\\"index.dashboards\\\">Profiles<span class=\\\"label label-primary pull-right\\\">NEW</span></a></li></ul></li><li ng-class=\\\"{active: $state.includes(\\'index.taskboard\\')}\\\"><a href=\\\"#\\\"><i class=\\\"fa fa-tasks\\\"></i> <span class=\\\"nav-label\\\">Taskboard</span><span class=\\\"fa arrow\\\"></span></a><ul class=\\\"nav nav-second-level collapse\\\" ng-class=\\\"{in: $state.includes(\\'index\\')}\\\"><li ng-class=\\\"vm.bcpNavClass(bcp)\\\" ng-repeat=\\\"bcp in vm.businessControlProfileList\\\"><a ui-sref=\\\"index.taskboard({filterText: 1, bcp: bcp.id})\\\">{{bcp.name}}</a></li></ul><ul class=\\\"nav nav-second-level collapse\\\" ng-class=\\\"{in: $state.includes(\\'index\\')}\\\"><li ng-class=\\\"{active: $state.includes(\\'index\\')}\\\"><a href=\\\"#\\\"><i class=\\\"fa fa-filter\\\"></i> <span class=\\\"nav-label-second-level\\\">Filters</span><span class=\\\"fa arrow\\\"></span></a><ul class=\\\"nav nav-third-level collapse\\\" ng-class=\\\"{in: $state.includes(\\'index\\')}\\\"><li ng-class=\\\"vm.filterNavClass(filter)\\\" ng-repeat=\\\"filter in vm.filters\\\"><a ui-sref=\\\"index.taskboard({filterText: filter.filterId})\\\">{{filter.filterName}}</a></li></ul></li></ul></li><li ui-sref-active=\\\"active\\\"><a ui-sref=\\\"index.minor\\\"><i class=\\\"fa fa-sitemap\\\"></i> <span class=\\\"nav-label\\\">Operations</span></a></li></ul></div></nav>\");\n$templateCache.put(\"app/components/common/topnavbar.html\",\"<div class=\\\"row border-bottom\\\"><nav class=\\\"navbar navbar-static-top white-bg\\\" role=\\\"navigation\\\" style=\\\"margin-bottom: 0\\\"><div class=\\\"navbar-header\\\"><span minimaliza-sidebar=\\\"\\\"></span><form role=\\\"search\\\" class=\\\"navbar-form-custom\\\" method=\\\"post\\\" action=\\\"\\\"><div class=\\\"form-group\\\"><input type=\\\"text\\\" placeholder=\\\"Search for something...\\\" class=\\\"form-control\\\" name=\\\"top-search\\\" id=\\\"top-search\\\"></div></form></div><ul class=\\\"nav navbar-top-links navbar-right\\\" ng-controller=\\\"LoginController as vm\\\"><li><a ui-sref=\\\"login\\\" ng-click=\\\"vm.logout()\\\"><i class=\\\"fa fa-sign-out\\\"></i> Log out</a></li></ul></nav></div>\");}]);"],"sourceRoot":"/source/"}